// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"math/big"
	"strings"

	"github.com/klaytn/klaytn"
	"github.com/klaytn/klaytn/accounts/abi"
	"github.com/klaytn/klaytn/accounts/abi/bind"
	"github.com/klaytn/klaytn/blockchain/types"
	"github.com/klaytn/klaytn/common"
	"github.com/klaytn/klaytn/event"
)

// AddressBookABI is the input ABI used to generate the binding from.
const AddressBookABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_cnNodeId\",\"type\":\"address\"}],\"name\":\"getCnInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllAddressInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getState\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pocContractAddress\",\"type\":\"address\"},{\"name\":\"_version\",\"type\":\"uint256\"}],\"name\":\"submitUpdatePocContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"deleteAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cnNodeId\",\"type\":\"address\"},{\"name\":\"_cnStakingContractAddress\",\"type\":\"address\"},{\"name\":\"_cnRewardAddress\",\"type\":\"address\"}],\"name\":\"registerCnStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CN_REWARD_ADDRESS_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spareContractAddress\",\"type\":\"address\"}],\"name\":\"submitUpdateSpareContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_functionId\",\"type\":\"uint8\"},{\"name\":\"_firstArg\",\"type\":\"bytes32\"},{\"name\":\"_secondArg\",\"type\":\"bytes32\"},{\"name\":\"_thirdArg\",\"type\":\"bytes32\"}],\"name\":\"revokeRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_functionId\",\"type\":\"uint8\"},{\"name\":\"_firstArg\",\"type\":\"bytes32\"},{\"name\":\"_secondArg\",\"type\":\"bytes32\"},{\"name\":\"_thirdArg\",\"type\":\"bytes32\"}],\"name\":\"getRequestInfoByArgs\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KIR_CONTRACT_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isActivated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kirContractAddress\",\"type\":\"address\"},{\"name\":\"_version\",\"type\":\"uint256\"}],\"name\":\"updateKirContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isConstructed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cnNodeId\",\"type\":\"address\"}],\"name\":\"unregisterCnStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spareContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CN_NODE_ID_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_PENDING_REQUEST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adminList\",\"type\":\"address[]\"},{\"name\":\"_requirement\",\"type\":\"uint256\"}],\"name\":\"constructContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"submitDeleteAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getRequestInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rewardAddress\",\"type\":\"address\"}],\"name\":\"reviseRewardAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"submitAddAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"submitClearRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ONE_WEEK\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kirContractAddress\",\"type\":\"address\"},{\"name\":\"_version\",\"type\":\"uint256\"}],\"name\":\"submitUpdateKirContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TWO_WEEKS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spareContractAddress\",\"type\":\"address\"}],\"name\":\"updateSpareContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"POC_CONTRACT_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cnNodeId\",\"type\":\"address\"}],\"name\":\"submitUnregisterCnStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requirement\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kirContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requirement\",\"type\":\"uint256\"}],\"name\":\"updateRequirement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pocContractAddress\",\"type\":\"address\"},{\"name\":\"_version\",\"type\":\"uint256\"}],\"name\":\"updatePocContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cnNodeId\",\"type\":\"address\"},{\"name\":\"_cnStakingContractAddress\",\"type\":\"address\"},{\"name\":\"_cnRewardAddress\",\"type\":\"address\"}],\"name\":\"submitRegisterCnStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activateAddressBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pocContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPendingRequestList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CN_STAKING_ADDRESS_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requirement\",\"type\":\"uint256\"}],\"name\":\"submitUpdateRequirement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"submitActivateAddressBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"contractType\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"adminList\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"requirement\",\"type\":\"uint256\"}],\"name\":\"DeployContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AddAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"DeleteAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"requirement\",\"type\":\"uint256\"}],\"name\":\"UpdateRequirement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ClearRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"firstArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"secondArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"thirdArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"confirmers\",\"type\":\"address[]\"}],\"name\":\"SubmitRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"firstArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"secondArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"thirdArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"confirmers\",\"type\":\"address[]\"}],\"name\":\"ExpiredRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"firstArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"secondArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"thirdArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"confirmers\",\"type\":\"address[]\"}],\"name\":\"RevokeRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"firstArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"secondArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"thirdArg\",\"type\":\"bytes32\"}],\"name\":\"CancelRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"firstArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"secondArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"thirdArg\",\"type\":\"bytes32\"}],\"name\":\"ExecuteRequestSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"firstArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"secondArg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"thirdArg\",\"type\":\"bytes32\"}],\"name\":\"ExecuteRequestFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ActivateAddressBook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevPocContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"prevVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"curPocContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"curVersion\",\"type\":\"uint256\"}],\"name\":\"UpdatePocContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevKirContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"prevVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"curKirContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"curVersion\",\"type\":\"uint256\"}],\"name\":\"UpdateKirContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"spareContractAddress\",\"type\":\"address\"}],\"name\":\"UpdateSpareContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cnNodeId\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cnStakingContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cnRewardAddress\",\"type\":\"address\"}],\"name\":\"RegisterCnStakingContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cnNodeId\",\"type\":\"address\"}],\"name\":\"UnregisterCnStakingContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cnNodeId\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"prevRewardAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"curRewardAddress\",\"type\":\"address\"}],\"name\":\"ReviseRewardAddress\",\"type\":\"event\"}]"

// AddressBookBinRuntime is the compiled bytecode used for adding genesis block without deploying code.
const AddressBookBinRuntime = `0x6080604052600436106102215763ffffffff60e060020a60003504166315575d5a8114610226578063160370b8146102725780631865c57d1461037c57806321ac4ad4146103ec57806327e1f7df14610412578063298b3c611461043357806332b91e8514610460578063394a144a1461048b5780633f0628b1146104ac578063407091eb146104d057806341b6945c1461056c5780634a8c1fb4146105815780634b6a94cc146105aa5780634c5d435c146106345780634f97638f1461065857806350a5bb691461066d578063579740db1461068257806358d65880146106a35780636abd623d146106ca57806370480275146106fb578063715b208b1461071c57806376674c54146107ca578063778f39cb146107df5780637894c366146107f4578063791b51231461081857806382d67e5a14610839578063832a2aad146108d5578063863f5c0a146108f657806387cd9feb146109175780638e6f6b771461092c5780639258d76814610941578063934d1fa414610965578063afaaf3301461097a578063b50060e41461099b578063b5067706146109b0578063b7563930146109d1578063b858dd95146109e6578063c47afb3a146109fb578063c7e9de7514610a13578063cc11efc014610a37578063cec9246614610a64578063d267eda514610a79578063da34a0bd14610a8e578063de5bbfbc14610af3578063e748357b14610b08578063feb15ca114610b20578063ffa1ad7414610b35575b600080fd5b34801561023257600080fd5b50610247600160a060020a0360043516610b4a565b60408051600160a060020a039485168152928416602084015292168183015290519081900360600190f35b34801561027e57600080fd5b50610287610ca0565b60408051600160a060020a0380851660608301528316608082015260a080825287519082015286519091829160208084019284019160c08501918b8101910280838360005b838110156102e45781810151838201526020016102cc565b50505050905001848103835288818151815260200191508051906020019060200280838360005b8381101561032357818101518382015260200161030b565b50505050905001848103825287818151815260200191508051906020019060200280838360005b8381101561036257818101518382015260200161034a565b505050509050019850505050505050505060405180910390f35b34801561038857600080fd5b50610391610deb565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156103d75781810151838201526020016103bf565b50505050905001935050505060405180910390f35b3480156103f857600080fd5b50610410600160a060020a0360043516602435610e57565b005b34801561041e57600080fd5b50610410600160a060020a0360043516611038565b34801561043f57600080fd5b50610410600160a060020a03600435811690602435811690604435166112c9565b34801561046c57600080fd5b50610475611720565b6040805160ff9092168252519081900360200190f35b34801561049757600080fd5b50610410600160a060020a0360043516611725565b3480156104b857600080fd5b5061041060ff600435166024356044356064356117f6565b3480156104dc57600080fd5b506104f460ff60043516602435604435606435611e88565b60408051858152908101839052602081016060820183600481111561051557fe5b60ff168152602001828103825285818151815260200191508051906020019060200280838360005b8381101561055557818101518382015260200161053d565b505050509050019550505050505060405180910390f35b34801561057857600080fd5b50610475611f35565b34801561058d57600080fd5b50610596611f3a565b604080519115158252519081900360200190f35b3480156105b657600080fd5b506105bf611f43565b6040805160208082528351818301528351919283929083019185019080838360005b838110156105f95781810151838201526020016105e1565b50505050905090810190601f1680156106265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561064057600080fd5b50610410600160a060020a0360043516602435611f7a565b34801561066457600080fd5b5061041061216f565b34801561067957600080fd5b50610596612274565b34801561068e57600080fd5b50610410600160a060020a0360043516612282565b3480156106af57600080fd5b506106b8612658565b60408051918252519081900360200190f35b3480156106d657600080fd5b506106df61265d565b60408051600160a060020a039092168252519081900360200190f35b34801561070757600080fd5b50610410600160a060020a036004351661266c565b34801561072857600080fd5b5061073161284b565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561077557818101518382015260200161075d565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156107b457818101518382015260200161079c565b5050505090500194505050505060405180910390f35b3480156107d657600080fd5b50610475612b3a565b3480156107eb57600080fd5b506106b8612b3f565b34801561080057600080fd5b50610410602460048035828101929101359035612b44565b34801561082457600080fd5b50610410600160a060020a0360043516612ef1565b34801561084557600080fd5b506108516004356130f6565b6040518088600a81111561086157fe5b60ff16815260208101889052604081018790526060810186905260a08101849052608081019060c00183600481111561089657fe5b60ff168152602001828103825285818151815260200191508051906020019060200280838360008381101561036257818101518382015260200161034a565b3480156108e157600080fd5b50610410600160a060020a03600435166131b4565b34801561090257600080fd5b50610410600160a060020a03600435166133bd565b34801561092357600080fd5b5061041061358b565b34801561093857600080fd5b506106b8613649565b34801561094d57600080fd5b50610410600160a060020a0360043516602435613650565b34801561097157600080fd5b506106b86137e8565b34801561098657600080fd5b50610410600160a060020a03600435166137ef565b3480156109a757600080fd5b5061047561388e565b3480156109bc57600080fd5b50610410600160a060020a0360043516613893565b3480156109dd57600080fd5b506106b8613a49565b3480156109f257600080fd5b506106df613a4f565b348015610a0757600080fd5b50610410600435613a5e565b348015610a1f57600080fd5b50610410600160a060020a0360043516602435613bb1565b348015610a4357600080fd5b50610410600160a060020a0360043581169060243581169060443516613da6565b348015610a7057600080fd5b50610410614265565b348015610a8557600080fd5b506106df6145b5565b348015610a9a57600080fd5b50610aa36145c4565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610adf578181015183820152602001610ac7565b505050509050019250505060405180910390f35b348015610aff57600080fd5b5061047561461e565b348015610b1457600080fd5b50610410600435614623565b348015610b2c57600080fd5b506104106147a6565b348015610b4157600080fd5b506106b861461e565b600080808084600160a060020a0381161515610b9e576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b600160a060020a038616600081815260086020526040902054600980549194509084908110610bc957fe5b600091825260209091200154600160a060020a031614610c21576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b6009805483908110610c2f57fe5b600091825260209091200154600a8054600160a060020a039092169184908110610c5557fe5b600091825260209091200154600b8054600160a060020a039092169185908110610c7b57fe5b6000918252602090912001549196509450600160a060020a0316925050509193909250565b60055460065460098054604080516020808402820181019092528281526060958695869560009586959194600a94600b94600160a060020a03918216949116928791830182828015610d1b57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610cfd575b5050505050945083805480602002602001604051908101604052809291908181526020018280548015610d7757602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610d59575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610dd357602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610db5575b50505050509250945094509450945094509091929394565b606060008060015481805480602002602001604051908101604052809291908181526020018280548015610e4857602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610e2a575b50505050509150915091509091565b600082600160a060020a0381161515610ea8576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff161515610eff576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b8385600160a060020a0316630f6100726040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b505050506040513d6020811015610f6857600080fd5b505114610fbf576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c696420506f432076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b610fd66006600160a060020a038716866000614af1565b9250610fef6006600160a060020a038716866000614bc4565b610ff8836151f5565b80156110235750600160008481526003602052604090206006015460ff16600481111561102157fe5b145b156110315761103183615210565b5050505050565b600080333014611080576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600160a060020a038316600090815260026020526040902054839060ff1615156110e2576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b6000546110f690600163ffffffff61591416565b6001546032821115801561110a5750818111155b801561111557508015155b801561112057508115155b1515611164576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b60008054600160a060020a0388168252600260205260408220805460ff19169055955093505b6001850384101561123d5785600160a060020a03166000858154811015156111ae57fe5b600091825260209091200154600160a060020a03161415611232576000805460001987019081106111db57fe5b60009182526020822001548154600160a060020a039091169190869081106111ff57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a0316021790555061123d565b60019093019261118a565b60008054600019870190811061124f57fe5b600091825260208220018054600160a060020a03191690555461127990600163ffffffff61591416565b611284600082615a01565b5061128d61216f565b604051600160a060020a038716907f1af6bd3d85a56e7c4a0700756fd2ca3b3b65c266e56c77652c5a346bc256522090600090a2505050505050565b6000333014611310576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600954600010156113ae57600160a060020a03841660008181526008602052604090205460098054909190811061134357fe5b600091825260209091200154600160a060020a031614156113ae576040805160e560020a62461bcd02815260206004820152601960248201527f434e206e6f646520494420616c72656164792065786973742e00000000000000604482015290519081900360640190fd5b83600160a060020a031683600160a060020a031663139d7fed6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b505050506040513d602081101561142057600080fd5b5051600160a060020a03161461146e576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b81600160a060020a031683600160a060020a0316638cf57cb96040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b505050506040513d60208110156114e057600080fd5b5051600160a060020a031614611540576040805160e560020a62461bcd02815260206004820152601a60248201527f496e76616c696420434e2072657761726420616464726573732e000000000000604482015290519081900360640190fd5b82600160a060020a031663392e53cd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050506040513d60208110156115a857600080fd5b50511515600114611603576040805160e560020a62461bcd02815260206004820152601f60248201527f434e20636f6e7472616374206973206e6f7420696e697469616c697a65642e00604482015290519081900360640190fd5b5060098054600160a060020a03808616600081815260086020908152604080832086905560018087019097557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af86018054600160a060020a03199081168617909155600a8054808a019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180548b88169083168117909155600b8054998a0181559094527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db99097018054958916959097168517909655855192835282015280840191909152915190917fe01726557c1ea9f7286dca4bba890e96fea9041689db298806306cafa74c9e91919081900360600190a150505050565b600281565b3360008181526002602052604081205490919060ff16151561177f576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b611796600a600160a060020a038516600080614af1565b91506117af600a600160a060020a038516600080614bc4565b6117b8826151f5565b80156117e35750600160008381526003602052604090206006015460ff1660048111156117e157fe5b145b156117f1576117f182615210565b505050565b33600081815260026020526040812054909182918291829160ff161515611855576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b61186189898989614af1565b60008181526003602052604090206005015490955015156118cc576040805160e560020a62461bcd02815260206004820152601060248201527f496e76616c696420726571756573742e00000000000000000000000000000000604482015290519081900360640190fd5b600160008681526003602052604090206006015460ff1660048111156118ee57fe5b14611943576040805160e560020a62461bcd02815260206004820152601f60248201527f4d757374206265206174206e6f742d636f6e6669726d65642073746174652e00604482015290519081900360640190fd5b60008581526003602052604081206004015490945092508391505b82821015611e2657600085815260036020526040902060040180548390811061198357fe5b600091825260209091200154600160a060020a0316331415611e1b57600085815260036020526040902060050154600194504262093a809091011015611b2f5760008581526003602052604090206005015442621275009091011015611a3e576119ec8561592b565b60008581526003602081905260408220805460ff19168155600181018390556002810183905590810182905590611a266004830182615a25565b5060006005820155600601805460ff19169055611a5b565b6000858152600360205260409020600601805460ff191660041790555b600085815260036020526040908190209051339187917f9f3ca7a04988021200a04e0775f46648683bffe7203608269a66c371befe5685918d918d918d918d91600401908086600a811115611aac57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015611b1857602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611afa575b5050965050505050505060405180910390a3611e16565b60001983018214611bc057600085815260036020526040902060040180546000198501908110611b5b57fe5b6000918252602080832090910154878352600390915260409091206004018054600160a060020a039092169184908110611b9157fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b600085815260036020526040902060040180546000198501908110611be157fe5b600091825260208083209091018054600160a060020a0319169055868252600390526040902060040154611c1c90600163ffffffff61591416565b6000868152600360205260409020611c379060040182615a01565b5060008581526003602081905260409182902080546001820154600283015493830154945133958b957f9c174b2536ba49e3478ca649dac74d9e9f71f70adf70f193e780eabbfcdc367c9560ff9095169490926004909101908086600a811115611c9d57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015611d0957602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611ceb575b5050965050505050505060405180910390a36000858152600360205260409020600401541515611e1657611d3c8561592b565b60008581526003602081905260408220805460ff19168155600181018390556002810183905590810182905590611d766004830182615a25565b506000600582018190556006909101805460ff19169055858152600360208190526040918290208054600182015460028301549290930154935133948a947fbfda049a0206fd9c90ed4a3170f5bfaad83c323a16835dd68fea92faa247c2cd9460ff9094169390929091908085600a811115611dee57fe5b60ff168152602081019490945250604080840192909252606083015251908190036080019150a35b611e26565b60019091019061195e565b831515611e7d576040805160e560020a62461bcd02815260206004820152601d60248201527f4d73672e73656e64657220686173206e6f74207265717565737465642e000000604482015290519081900360640190fd5b505050505050505050565b600060606000806000611e9d89898989614af1565b600081815260036020908152604091829020600581015460068201546004909201805485518186028101860190965280865295965086959094919360ff90931692859190830182828015611f1a57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611efc575b50505050509250945094509450945050945094509450949050565b600481565b600c5460ff1681565b60408051808201909152600b81527f41646472657373426f6f6b000000000000000000000000000000000000000000602082015281565b600080333014611fc2576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b8284600160a060020a031663444263466040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561200157600080fd5b505af1158015612015573d6000803e3d6000fd5b505050506040513d602081101561202b57600080fd5b505114612082576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c6964204b49522076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b505060068054600160a060020a03848116600160a060020a031983161790925516600081156121185781600160a060020a031663444263466040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156120e957600080fd5b505af11580156120fd573d6000803e3d6000fd5b505050506040513d602081101561211357600080fd5b505190505b60408051600160a060020a038085168252602082018490528616818301526060810185905290517ffdccdf242038c2d09605009fbb95e03f75cdbd106d0a9e52a1670be9553c88489181900360800190a150505050565b6000803330146121b7576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b505060045460005b8181101561223b57600360006004838154811015156121da57fe5b600091825260208083209091015483528201929092526040018120805460ff19168155600181018290556002810182905560038101829055906122206004830182615a25565b5060006005820155600601805460ff191690556001016121bf565b61224760046000615a25565b6040517f907527d30089abd16e30f06ddbbbc18480505176262f19bc16c1fbf9262f9c6b90600090a15050565b600c54610100900460ff1681565b60003330146122c9576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b50600160a060020a03811660008181526008602052604090205460098054919291839081106122f457fe5b600091825260209091200154600160a060020a03161461234c576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b6009546001106123a6576040805160e560020a62461bcd02815260206004820152601b60248201527f434e2073686f756c64206265206d6f7265207468616e206f6e652e0000000000604482015290519081900360640190fd5b6009546000190181101561251e576009805460001981019081106123c657fe5b60009182526020909120015460098054600160a060020a0390921691839081106123ec57fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600954600a805490916000190190811061242b57fe5b600091825260209091200154600a8054600160a060020a03909216918390811061245157fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600954600b805490916000190190811061249057fe5b600091825260209091200154600b8054600160a060020a0390921691839081106124b657fe5b600091825260208220018054600160a060020a031916600160a060020a039390931692909217909155600980548392600892909160001981019081106124f857fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020555b600160a060020a03821660009081526008602052604081205560098054600019810190811061254957fe5b60009182526020909120018054600160a060020a031916905560095461257690600163ffffffff61591416565b612581600982615a01565b50600a8054600019810190811061259457fe5b60009182526020909120018054600160a060020a0319169055600a546125c190600163ffffffff61591416565b6125cc600a82615a01565b50600b805460001981019081106125df57fe5b60009182526020909120018054600160a060020a0319169055600b5461260c90600163ffffffff61591416565b612617600b82615a01565b5060408051600160a060020a038416815290517fa30079721e55931e89e7cdb421712ad0fcc817e7cac8fe954aa7ed0d46b9c42d9181900360200190a15050565b603281565b600754600160a060020a031681565b3330146126b1576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600160a060020a038116600090815260026020526040902054819060ff1615612724576040805160e560020a62461bcd02815260206004820152601460248201527f41646d696e20616c72656164792065786974732e000000000000000000000000604482015290519081900360640190fd5b60005461273890600163ffffffff6159e816565b6001546032821115801561274c5750818111155b801561275757508015155b801561276257508115155b15156127a6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b600160a060020a0384166000818152600260205260408120805460ff19166001908117909155815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018054600160a060020a031916909117905561281161216f565b604051600160a060020a038516907fad6de4452a631e641cb59902236607946ce9272b9b981f2f80e8d129cb9084ba90600090a250505050565b600c54606090819081908190600090819060ff161515612884576040805160008082526020820190815281830190925294509250612b2f565b6009805490506003026002016040519080825280602002602001820160405280156128b9578160200160208202803883390190505b5093506009805490506003026002016040519080825280602002602001820160405280156128f1578160200160208202803883390190505b506009549093509150600090505b81811015612a71576000848260030281518110151561291a57fe5b60ff909216602092830290910190910152600980548290811061293957fe5b6000918252602090912001548351600160a060020a039091169084906003840290811061296257fe5b600160a060020a039092166020928302909101909101528351600190859060038402830190811061298f57fe5b60ff909216602092830290910190910152600a8054829081106129ae57fe5b6000918252602090912001548351600160a060020a03909116908490600384026001019081106129da57fe5b600160a060020a0390921660209283029091019091015283516002908590600384028301908110612a0757fe5b60ff909216602092830290910190910152600b805482908110612a2657fe5b6000918252602090912001548351600160a060020a0390911690849060026003850201908110612a5257fe5b600160a060020a039092166020928302909101909101526001016128ff565b60038483600302815181101515612a8457fe5b60ff9092166020928302909101909101526005548351600160a060020a0390911690849060038502908110612ab557fe5b600160a060020a039092166020928302909101909101528351600490859060016003860201908110612ae357fe5b60ff9092166020928302909101909101526006548351600160a060020a0390911690849060038502600101908110612b1757fe5b600160a060020a039092166020928302909101909101525b509194909350915050565b600081565b606481565b600080838360328211801590612b5a5750818111155b8015612b6557508015155b8015612b7057508115155b1515612bb4576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b7388bb3838aa0a140acb73eeb3d4b25a8d3afd58d43314612c1f576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642073656e6465722e0000000000000000000000000000000000604482015290519081900360640190fd5b600c54610100900460ff1615612c7f576040805160e560020a62461bcd02815260206004820152601460248201527f416c726561647920636f6e73747275637465642e000000000000000000000000604482015290519081900360640190fd5b600c805460ff19169055859350600092505b83831015612da65760026000888886818110612ca957fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff16158015612d015750868684818110612ce357fe5b90506020020135600160a060020a0316600160a060020a0316600014155b1515612d57576040805160e560020a62461bcd02815260206004820152601e60248201527f41646472657373206973206e756c6c206f72206e6f7420756e697175652e0000604482015290519081900360640190fd5b600160026000898987818110612d6957fe5b60209081029290920135600160a060020a0316835250810191909152604001600020805460ff191691151591909117905560019290920191612c91565b612db260008888615a46565b506001859055600c805461ff001916610100179055604080518082018252600b81527f41646472657373426f6f6b00000000000000000000000000000000000000000060208083019182528351938401899052606080855283519085015282517fc5caa942b8f8ea45a2e094d941dbba0ef9c0307f34c81ce78e71bfb128d6b25a946000938b939192839283019160808401918083838a5b83811015612e62578181015183820152602001612e4a565b50505050905090810190601f168015612e8f5780820380516001836020036101000a031916815260200191505b508381038252858181548152602001915080548015612ed757602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311612eb9575b50509550505050505060405180910390a150505050505050565b600160a060020a038116600090815260026020526040812054829060ff161515612f53576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff161515612faa576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b83600160a060020a0381161515612ff9576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b60005461300d90600163ffffffff61591416565b600154603282111580156130215750818111155b801561302c57508015155b801561303757508115155b151561307b576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b6130926002600160a060020a038916600080614af1565b95506130ab6002600160a060020a038916600080614bc4565b6130b4866151f5565b80156130df5750600160008781526003602052604090206006015460ff1660048111156130dd57fe5b145b156130ed576130ed86615210565b50505050505050565b60008181526003602081815260408084208054600182015460028301549583015460058401546006850154600490950180548751818a0281018a019098528088528a998a998a996060998b998a9960ff91821699909895979096909594919092169291859183018282801561319457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311613176575b505050505092509650965096509650965096509650919395979092949650565b60008080808085600160a060020a0381161515613209576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b600a546000965086955093508492505b8383101561326457600a80543391908590811061323257fe5b600091825260209091200154600160a060020a031614156132595760019550829450613264565b600190920191613219565b8515156132bb576040805160e560020a62461bcd02815260206004820152601e60248201527f4d73672e73656e646572206973206e6f7420434e20636f6e74726163742e0000604482015290519081900360640190fd5b600b8054869081106132c957fe5b600091825260209091200154600b8054600160a060020a0390921693508891879081106132f257fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055507faa5c92ffd739bc0b8b117b671e7d713917ddb1440b436263a3ea106d70c6f05f60098681548110151561335057fe5b600091825260209091200154600b8054600160a060020a03909216918591908990811061337957fe5b6000918252602091829020015460408051600160a060020a03958616815293851692840192909252929092168183015290519081900360600190a150505050505050565b3360008181526002602052604081205490919060ff161515613417576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b600160a060020a038316600090815260026020526040902054839060ff161561348a576040805160e560020a62461bcd02815260206004820152601460248201527f41646d696e20616c72656164792065786974732e000000000000000000000000604482015290519081900360640190fd5b83600160a060020a03811615156134d9576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b6000546134ed90600163ffffffff6159e816565b600154603282111580156135015750818111155b801561350c57508015155b801561351757508115155b151561355b576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b6135726001600160a060020a038916600080614af1565b95506130ab6001600160a060020a038916600080614bc4565b3360008181526002602052604081205490919060ff1615156135e5576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b6135f3600460008080614af1565b9150613603600460008080614bc4565b61360c826151f5565b80156136375750600160008381526003602052604090206006015460ff16600481111561363557fe5b145b156136455761364582615210565b5050565b62093a8081565b600082600160a060020a03811615156136a1576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff1615156136f8576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b8385600160a060020a031663444263466040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561373757600080fd5b505af115801561374b573d6000803e3d6000fd5b505050506040513d602081101561376157600080fd5b5051146137b8576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c6964204b49522076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b6137cf6007600160a060020a038716866000614af1565b9250610fef6007600160a060020a038716866000614bc4565b6212750081565b333014613834576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b60078054600160a060020a031916600160a060020a03838116919091179182905560408051929091168252517f508aacd44cfe23a34a8c2643ab08c3410cf5505632cfce58dcfa0efa2fd2ff37916020908290030190a150565b600381565b60008082600160a060020a03811615156138e5576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff16151561393c576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b600160a060020a03851660008181526008602052604090205460098054919650908690811061396757fe5b600091825260209091200154600160a060020a0316146139bf576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b600954600110613a19576040805160e560020a62461bcd02815260206004820152601b60248201527f434e2073686f756c64206265206d6f7265207468616e206f6e652e0000000000604482015290519081900360640190fd5b613a306009600160a060020a038716600080614af1565b9250610fef6009600160a060020a038716600080614bc4565b60015481565b600654600160a060020a031681565b333014613aa3576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b6000548160328211801590613ab85750818111155b8015613ac357508015155b8015613ace57508115155b1515613b12576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b600154831415613b6c576040805160e560020a62461bcd02815260206004820152601160248201527f53616d6520726571756972656d656e742e000000000000000000000000000000604482015290519081900360640190fd5b6001839055613b7961216f565b6040805184815290517f8951393946c27b45080aad111464c16c70f3d5e7d24b114a627334441961bf5f9181900360200190a1505050565b600080333014613bf9576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b8284600160a060020a0316630f6100726040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015613c3857600080fd5b505af1158015613c4c573d6000803e3d6000fd5b505050506040513d6020811015613c6257600080fd5b505114613cb9576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c696420506f432076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b505060058054600160a060020a03848116600160a060020a03198316179092551660008115613d4f5781600160a060020a0316630f6100726040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015613d2057600080fd5b505af1158015613d34573d6000803e3d6000fd5b505050506040513d6020811015613d4a57600080fd5b505190505b60408051600160a060020a038085168252602082018490528616818301526060810185905290517fd531725ac89042f190fd73adfdeff435e07500f1a92b4b87743f1bcf91acb3a79181900360800190a150505050565b600083600160a060020a0381161515613df7576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b83600160a060020a0381161515613e46576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b83600160a060020a0381161515613e95576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff161515613eec576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b60095460001015613f8a57600160a060020a038816600081815260086020526040902054600980549091908110613f1f57fe5b600091825260209091200154600160a060020a03161415613f8a576040805160e560020a62461bcd02815260206004820152601960248201527f434e206e6f646520494420616c72656164792065786973742e00000000000000604482015290519081900360640190fd5b87600160a060020a031687600160a060020a031663139d7fed6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015613fd257600080fd5b505af1158015613fe6573d6000803e3d6000fd5b505050506040513d6020811015613ffc57600080fd5b5051600160a060020a03161461404a576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b85600160a060020a031687600160a060020a0316638cf57cb96040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561409257600080fd5b505af11580156140a6573d6000803e3d6000fd5b505050506040513d60208110156140bc57600080fd5b5051600160a060020a03161461411c576040805160e560020a62461bcd02815260206004820152601a60248201527f496e76616c696420434e2072657761726420616464726573732e000000000000604482015290519081900360640190fd5b86600160a060020a031663392e53cd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561415a57600080fd5b505af115801561416e573d6000803e3d6000fd5b505050506040513d602081101561418457600080fd5b505115156001146141df576040805160e560020a62461bcd02815260206004820152601f60248201527f434e20636f6e7472616374206973206e6f7420696e697469616c697a65642e00604482015290519081900360640190fd5b6141fb6008600160a060020a03808b16908a8116908a16614af1565b94506142196008600160a060020a03808b16908a8116908a16614bc4565b614222856151f5565b801561424d5750600160008681526003602052604090206006015460ff16600481111561424b57fe5b145b1561425b5761425b85615210565b5050505050505050565b3330146142aa576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600c5460ff1615614305576040805160e560020a62461bcd02815260206004820152601260248201527f416c7265616479206163746976617465642e0000000000000000000000000000604482015290519081900360640190fd5b600054151561435e576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f2061646d696e206973206c69737465642e00000000000000000000000000604482015290519081900360640190fd5b600554600160a060020a031615156143c0576040805160e560020a62461bcd02815260206004820152601f60248201527f506f4320636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b600654600160a060020a03161515614422576040805160e560020a62461bcd02815260206004820152601f60248201527f4b495220636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b600954151561447b576040805160e560020a62461bcd02815260206004820152601560248201527f4e6f206e6f6465204944206973206c69737465642e0000000000000000000000604482015290519081900360640190fd5b600a54600954146144fc576040805160e560020a62461bcd02815260206004820152603660248201527f496e76616c6964206c656e677468206265747765656e206e6f6465204944732060448201527f616e64207374616b696e6720636f6e7472616374732e00000000000000000000606482015290519081900360840190fd5b600b54600a541461457d576040805160e560020a62461bcd02815260206004820152603e60248201527f496e76616c6964206c656e677468206265747765656e207374616b696e67206360448201527f6f6e74726163747320616e6420726577617264206164647265737365732e0000606482015290519081900360840190fd5b600c805460ff191660011790556040517f29d89931226d613bf878a0be8c635eaf2049121c8c68d5ad80a78f0ac9005d4b90600090a1565b600554600160a060020a031681565b6060600480548060200260200160405190810160405280929190818152602001828054801561461357602002820191906000526020600020905b815481526001909101906020018083116145fe575b505050505090505b90565b600181565b3360008181526002602052604081205490919060ff16151561467d576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b60005483603282118015906146925750818111155b801561469d57508015155b80156146a857508115155b15156146ec576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b600154851415614746576040805160e560020a62461bcd02815260206004820152601160248201527f53616d6520726571756972656d656e742e000000000000000000000000000000604482015290519081900360640190fd5b614754600386600080614af1565b9350614764600386600080614bc4565b61476d846151f5565b80156147985750600160008581526003602052604090206006015460ff16600481111561479657fe5b145b156110315761103184615210565b3360008181526002602052604081205490919060ff161515614800576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b600c5460ff161561485b576040805160e560020a62461bcd02815260206004820152601260248201527f416c7265616479206163746976617465642e0000000000000000000000000000604482015290519081900360640190fd5b60005415156148b4576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f2061646d696e206973206c69737465642e00000000000000000000000000604482015290519081900360640190fd5b600554600160a060020a03161515614916576040805160e560020a62461bcd02815260206004820152601f60248201527f506f4320636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b600654600160a060020a03161515614978576040805160e560020a62461bcd02815260206004820152601f60248201527f4b495220636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b60095415156149d1576040805160e560020a62461bcd02815260206004820152601560248201527f4e6f206e6f6465204944206973206c69737465642e0000000000000000000000604482015290519081900360640190fd5b600a5460095414614a52576040805160e560020a62461bcd02815260206004820152603660248201527f496e76616c6964206c656e677468206265747765656e206e6f6465204944732060448201527f616e64207374616b696e6720636f6e7472616374732e00000000000000000000606482015290519081900360840190fd5b600b54600a5414614ad3576040805160e560020a62461bcd02815260206004820152603e60248201527f496e76616c6964206c656e677468206265747765656e207374616b696e67206360448201527f6f6e74726163747320616e6420726577617264206164647265737365732e0000606482015290519081900360840190fd5b614ae1600560008080614af1565b9150613603600560008080614bc4565b6000848484846040516020018085600a811115614b0a57fe5b60ff167f010000000000000000000000000000000000000000000000000000000000000002815260018101949094525060218301919091526041808301919091526040805180840390920182526061909201918290528051909250819060208401908083835b60208310614b8f5780518252601f199092019160209182019101614b70565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912098975050505050505050565b6000806000614bd587878787614af1565b60008181526003602052604090206005015490935015614f5e5760008381526003602052604090206005015442621275009091011015614c6a57614c188361592b565b60008381526003602081905260408220805460ff19168155600181018390556002810183905590810182905590614c526004830182615a25565b5060006005820155600601805460ff19169055614f5e565b6000838152600360205260409020600501544262093a809091011015614da257600460008481526003602052604090206006015460ff166004811115614cac57fe5b14614cce576000838152600360205260409020600601805460ff191660041790555b600083815260036020526040908190209051339185917f9f3ca7a04988021200a04e0775f46648683bffe7203608269a66c371befe5685918b918b918b918b91600401908086600a811115614d1f57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015614d8b57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311614d6d575b5050965050505050505060405180910390a3614f5e565b6000838152600360205260409020600501544210614f5e575050600081815260036020526040812060040154905b81811015614e69576000838152600360205260409020600401805482908110614df557fe5b600091825260209091200154600160a060020a0316331415614e61576040805160e560020a62461bcd02815260206004820152601d60248201527f4d73672e73656e64657220616c7265616479207265717565737465642e000000604482015290519081900360640190fd5b600101614dd0565b600083815260036020908152604080832060040180546001810182558185529284209092018054600160a060020a03191633908117909155928690525185917fb7b03afe355fcf2b1d00e020db2b1a902b9ee1b1c1d995626c1e18c957340ea8918b918b918b918b918086600a811115614edf57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015614f4b57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311614f2d575b5050965050505050505060405180910390a35b60008381526003602052604090206005015415156130ed57600454606411614fe357600487600a811115614f8e57fe5b14614fe3576040805160e560020a62461bcd02815260206004820152601560248201527f52657175657374206c6973742069732066756c6c2e0000000000000000000000604482015290519081900360640190fd5b60e06040519081016040528088600a811115614ffb57fe5b81526020808201899052604080830189905260608301889052805160008082529281019091526080909201919050815242602082015260400160019052600084815260036020526040902081518154829060ff1916600183600a81111561505e57fe5b021790555060208281015160018301556040830151600283015560608301516003830155608083015180516150999260048501920190615aa9565b5060a0820151600582015560c082015160068201805460ff191660018360048111156150c157fe5b0217905550505060008381526003602090815260408083206004908101805460018181018355828752948620018054600160a060020a0319163390811790915582549485019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909301879055928690525185917fb7b03afe355fcf2b1d00e020db2b1a902b9ee1b1c1d995626c1e18c957340ea8918b918b918b918b918086600a81111561516e57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c00190849080156151da57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116151bc575b5050965050505050505060405180910390a350505050505050565b60015460009182526003602052604090912060040154101590565b600061521a615afe565b600083815260036020526040808220815160e0810190925280549294509091829060ff16600a81111561524957fe5b600a81111561525457fe5b8152600182015460208083019190915260028301546040808401919091526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156152d557602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116152b7575b505050918352505060058201546020820152600682015460409091019060ff16600481111561530057fe5b600481111561530b57fe5b905250905060018151600a81111561531f57fe5b1415615389576020810151604080517f70480275000000000000000000000000000000000000000000000000000000008152600160a060020a0390921660048301525130916370480275916024808301926000929190829003018183875af192505050915061579a565b60028151600a81111561539857fe5b1415615402576020810151604080517f27e1f7df000000000000000000000000000000000000000000000000000000008152600160a060020a0390921660048301525130916327e1f7df916024808301926000929190829003018183875af192505050915061579a565b60038151600a81111561541157fe5b1415615473576020810151604080517fc47afb3a000000000000000000000000000000000000000000000000000000008152600481019290925251309163c47afb3a916024808301926000929190829003018183875af192505050915061579a565b60048151600a81111561548257fe5b14156154c55730600160a060020a0316634f97638f6040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050915061579a565b60058151600a8111156154d457fe5b14156155175730600160a060020a031663cec924666040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050915061579a565b60068151600a81111561552657fe5b141561559957602081015160408083015181517fc7e9de75000000000000000000000000000000000000000000000000000000008152600160a060020a039093166004840152602483015251309163c7e9de75916044808301926000929190829003018183875af192505050915061579a565b60078151600a8111156155a857fe5b141561561b57602081015160408083015181517f4c5d435c000000000000000000000000000000000000000000000000000000008152600160a060020a0390931660048401526024830152513091634c5d435c916044808301926000929190829003018183875af192505050915061579a565b60088151600a81111561562a57fe5b14156156ad576020810151604080830151606084015182517f298b3c61000000000000000000000000000000000000000000000000000000008152600160a060020a0394851660048201529184166024830152909216604483015251309163298b3c61916064808301926000929190829003018183875af192505050915061579a565b60098151600a8111156156bc57fe5b1415615726576020810151604080517f579740db000000000000000000000000000000000000000000000000000000008152600160a060020a03909216600483015251309163579740db916024808301926000929190829003018183875af192505050915061579a565b600a8151600a81111561573557fe5b141561579a576020810151604080517fafaaf330000000000000000000000000000000000000000000000000000000008152600160a060020a03909216600483015251309163afaaf330916024808301926000929190829003018183875af194505050505b6157a38361592b565b811561585d57600083815260036020526040902060050154156157dd576000838152600360205260409020600601805460ff191660021790555b33600160a060020a031683600019167fc55c9229184beabeee72b6970a96691b4200919e47579cc4b9be50a1bec7ef1183600001518460200151856040015186606001516040518085600a81111561583157fe5b60ff168152602081019490945250604080840192909252606083015251908190036080019150a36117f1565b60008381526003602052604090206005015415615894576000838152600360208190526040909120600601805460ff191690911790555b33600160a060020a031683600019167ff151a3ee41626c2511372320f09f7957af81c8c1cde8cdf3f05a5979626eaaf383600001518460200151856040015186606001516040518085600a8111156158e857fe5b60ff168152602081019490945250604080840192909252606083015251908190036080019150a3505050565b6000808383111561592457600080fd5b5050900390565b60045460005b818110156117f157600480548290811061594757fe5b6000918252602090912001548314156159e0576000198201811461599e5760048054600019840190811061597757fe5b906000526020600020015460048281548110151561599157fe5b6000918252602090912001555b6004805460001984019081106159b057fe5b60009182526020822001556004546159cf90600163ffffffff61591416565b6159da600482615a01565b506117f1565b600101615931565b6000828201838110156159fa57600080fd5b9392505050565b8154818355818111156117f1576000838152602090206117f1918101908301615b3b565b5080546000825590600052602060002090810190615a439190615b3b565b50565b828054828255906000526020600020908101928215615a99579160200282015b82811115615a99578154600160a060020a031916600160a060020a03843516178255602090920191600190910190615a66565b50615aa5929150615b55565b5090565b828054828255906000526020600020908101928215615a99579160200282015b82811115615a995782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190615ac9565b6040805160e081019091528060008152600060208201819052604082018190526060808301829052608083015260a0820181905260c09091015290565b61461b91905b80821115615aa55760008155600101615b41565b61461b91905b80821115615aa5578054600160a060020a0319168155600101615b5b560041646472657373206973206e6f742061646d696e2e0000000000000000000000496e76616c696420434e206e6f64652049442e0000000000000000000000000041646472657373206973206e756c6c2e000000000000000000000000000000004e6f742061206d756c74697369672d7472616e73616374696f6e2e0000000000496e76616c696420726571756972656d656e742e000000000000000000000000a165627a7a7230582007320485103bb418db53fd7eb24f69d0f455d28d1b5b146eb3e7fa6237cb69f10029`

// AddressBookBin is the compiled bytecode used for deploying new contracts.
const AddressBookBin = `0x608060405234801561001057600080fd5b50615c4580620000216000396000f3006080604052600436106102215763ffffffff60e060020a60003504166315575d5a8114610226578063160370b8146102725780631865c57d1461037c57806321ac4ad4146103ec57806327e1f7df14610412578063298b3c611461043357806332b91e8514610460578063394a144a1461048b5780633f0628b1146104ac578063407091eb146104d057806341b6945c1461056c5780634a8c1fb4146105815780634b6a94cc146105aa5780634c5d435c146106345780634f97638f1461065857806350a5bb691461066d578063579740db1461068257806358d65880146106a35780636abd623d146106ca57806370480275146106fb578063715b208b1461071c57806376674c54146107ca578063778f39cb146107df5780637894c366146107f4578063791b51231461081857806382d67e5a14610839578063832a2aad146108d5578063863f5c0a146108f657806387cd9feb146109175780638e6f6b771461092c5780639258d76814610941578063934d1fa414610965578063afaaf3301461097a578063b50060e41461099b578063b5067706146109b0578063b7563930146109d1578063b858dd95146109e6578063c47afb3a146109fb578063c7e9de7514610a13578063cc11efc014610a37578063cec9246614610a64578063d267eda514610a79578063da34a0bd14610a8e578063de5bbfbc14610af3578063e748357b14610b08578063feb15ca114610b20578063ffa1ad7414610b35575b600080fd5b34801561023257600080fd5b50610247600160a060020a0360043516610b4a565b60408051600160a060020a039485168152928416602084015292168183015290519081900360600190f35b34801561027e57600080fd5b50610287610ca0565b60408051600160a060020a0380851660608301528316608082015260a080825287519082015286519091829160208084019284019160c08501918b8101910280838360005b838110156102e45781810151838201526020016102cc565b50505050905001848103835288818151815260200191508051906020019060200280838360005b8381101561032357818101518382015260200161030b565b50505050905001848103825287818151815260200191508051906020019060200280838360005b8381101561036257818101518382015260200161034a565b505050509050019850505050505050505060405180910390f35b34801561038857600080fd5b50610391610deb565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156103d75781810151838201526020016103bf565b50505050905001935050505060405180910390f35b3480156103f857600080fd5b50610410600160a060020a0360043516602435610e57565b005b34801561041e57600080fd5b50610410600160a060020a0360043516611038565b34801561043f57600080fd5b50610410600160a060020a03600435811690602435811690604435166112c9565b34801561046c57600080fd5b50610475611720565b6040805160ff9092168252519081900360200190f35b34801561049757600080fd5b50610410600160a060020a0360043516611725565b3480156104b857600080fd5b5061041060ff600435166024356044356064356117f6565b3480156104dc57600080fd5b506104f460ff60043516602435604435606435611e88565b60408051858152908101839052602081016060820183600481111561051557fe5b60ff168152602001828103825285818151815260200191508051906020019060200280838360005b8381101561055557818101518382015260200161053d565b505050509050019550505050505060405180910390f35b34801561057857600080fd5b50610475611f35565b34801561058d57600080fd5b50610596611f3a565b604080519115158252519081900360200190f35b3480156105b657600080fd5b506105bf611f43565b6040805160208082528351818301528351919283929083019185019080838360005b838110156105f95781810151838201526020016105e1565b50505050905090810190601f1680156106265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561064057600080fd5b50610410600160a060020a0360043516602435611f7a565b34801561066457600080fd5b5061041061216f565b34801561067957600080fd5b50610596612274565b34801561068e57600080fd5b50610410600160a060020a0360043516612282565b3480156106af57600080fd5b506106b8612658565b60408051918252519081900360200190f35b3480156106d657600080fd5b506106df61265d565b60408051600160a060020a039092168252519081900360200190f35b34801561070757600080fd5b50610410600160a060020a036004351661266c565b34801561072857600080fd5b5061073161284b565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561077557818101518382015260200161075d565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156107b457818101518382015260200161079c565b5050505090500194505050505060405180910390f35b3480156107d657600080fd5b50610475612b3a565b3480156107eb57600080fd5b506106b8612b3f565b34801561080057600080fd5b50610410602460048035828101929101359035612b44565b34801561082457600080fd5b50610410600160a060020a0360043516612ef1565b34801561084557600080fd5b506108516004356130f6565b6040518088600a81111561086157fe5b60ff16815260208101889052604081018790526060810186905260a08101849052608081019060c00183600481111561089657fe5b60ff168152602001828103825285818151815260200191508051906020019060200280838360008381101561036257818101518382015260200161034a565b3480156108e157600080fd5b50610410600160a060020a03600435166131b4565b34801561090257600080fd5b50610410600160a060020a03600435166133bd565b34801561092357600080fd5b5061041061358b565b34801561093857600080fd5b506106b8613649565b34801561094d57600080fd5b50610410600160a060020a0360043516602435613650565b34801561097157600080fd5b506106b86137e8565b34801561098657600080fd5b50610410600160a060020a03600435166137ef565b3480156109a757600080fd5b5061047561388e565b3480156109bc57600080fd5b50610410600160a060020a0360043516613893565b3480156109dd57600080fd5b506106b8613a49565b3480156109f257600080fd5b506106df613a4f565b348015610a0757600080fd5b50610410600435613a5e565b348015610a1f57600080fd5b50610410600160a060020a0360043516602435613bb1565b348015610a4357600080fd5b50610410600160a060020a0360043581169060243581169060443516613da6565b348015610a7057600080fd5b50610410614265565b348015610a8557600080fd5b506106df6145b5565b348015610a9a57600080fd5b50610aa36145c4565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610adf578181015183820152602001610ac7565b505050509050019250505060405180910390f35b348015610aff57600080fd5b5061047561461e565b348015610b1457600080fd5b50610410600435614623565b348015610b2c57600080fd5b506104106147a6565b348015610b4157600080fd5b506106b861461e565b600080808084600160a060020a0381161515610b9e576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b600160a060020a038616600081815260086020526040902054600980549194509084908110610bc957fe5b600091825260209091200154600160a060020a031614610c21576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b6009805483908110610c2f57fe5b600091825260209091200154600a8054600160a060020a039092169184908110610c5557fe5b600091825260209091200154600b8054600160a060020a039092169185908110610c7b57fe5b6000918252602090912001549196509450600160a060020a0316925050509193909250565b60055460065460098054604080516020808402820181019092528281526060958695869560009586959194600a94600b94600160a060020a03918216949116928791830182828015610d1b57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610cfd575b5050505050945083805480602002602001604051908101604052809291908181526020018280548015610d7757602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610d59575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610dd357602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610db5575b50505050509250945094509450945094509091929394565b606060008060015481805480602002602001604051908101604052809291908181526020018280548015610e4857602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610e2a575b50505050509150915091509091565b600082600160a060020a0381161515610ea8576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff161515610eff576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b8385600160a060020a0316630f6100726040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b505050506040513d6020811015610f6857600080fd5b505114610fbf576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c696420506f432076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b610fd66006600160a060020a038716866000614af1565b9250610fef6006600160a060020a038716866000614bc4565b610ff8836151f5565b80156110235750600160008481526003602052604090206006015460ff16600481111561102157fe5b145b156110315761103183615210565b5050505050565b600080333014611080576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600160a060020a038316600090815260026020526040902054839060ff1615156110e2576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b6000546110f690600163ffffffff61591416565b6001546032821115801561110a5750818111155b801561111557508015155b801561112057508115155b1515611164576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b60008054600160a060020a0388168252600260205260408220805460ff19169055955093505b6001850384101561123d5785600160a060020a03166000858154811015156111ae57fe5b600091825260209091200154600160a060020a03161415611232576000805460001987019081106111db57fe5b60009182526020822001548154600160a060020a039091169190869081106111ff57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a0316021790555061123d565b60019093019261118a565b60008054600019870190811061124f57fe5b600091825260208220018054600160a060020a03191690555461127990600163ffffffff61591416565b611284600082615a01565b5061128d61216f565b604051600160a060020a038716907f1af6bd3d85a56e7c4a0700756fd2ca3b3b65c266e56c77652c5a346bc256522090600090a2505050505050565b6000333014611310576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600954600010156113ae57600160a060020a03841660008181526008602052604090205460098054909190811061134357fe5b600091825260209091200154600160a060020a031614156113ae576040805160e560020a62461bcd02815260206004820152601960248201527f434e206e6f646520494420616c72656164792065786973742e00000000000000604482015290519081900360640190fd5b83600160a060020a031683600160a060020a031663139d7fed6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b505050506040513d602081101561142057600080fd5b5051600160a060020a03161461146e576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b81600160a060020a031683600160a060020a0316638cf57cb96040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b505050506040513d60208110156114e057600080fd5b5051600160a060020a031614611540576040805160e560020a62461bcd02815260206004820152601a60248201527f496e76616c696420434e2072657761726420616464726573732e000000000000604482015290519081900360640190fd5b82600160a060020a031663392e53cd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050506040513d60208110156115a857600080fd5b50511515600114611603576040805160e560020a62461bcd02815260206004820152601f60248201527f434e20636f6e7472616374206973206e6f7420696e697469616c697a65642e00604482015290519081900360640190fd5b5060098054600160a060020a03808616600081815260086020908152604080832086905560018087019097557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af86018054600160a060020a03199081168617909155600a8054808a019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180548b88169083168117909155600b8054998a0181559094527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db99097018054958916959097168517909655855192835282015280840191909152915190917fe01726557c1ea9f7286dca4bba890e96fea9041689db298806306cafa74c9e91919081900360600190a150505050565b600281565b3360008181526002602052604081205490919060ff16151561177f576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b611796600a600160a060020a038516600080614af1565b91506117af600a600160a060020a038516600080614bc4565b6117b8826151f5565b80156117e35750600160008381526003602052604090206006015460ff1660048111156117e157fe5b145b156117f1576117f182615210565b505050565b33600081815260026020526040812054909182918291829160ff161515611855576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b61186189898989614af1565b60008181526003602052604090206005015490955015156118cc576040805160e560020a62461bcd02815260206004820152601060248201527f496e76616c696420726571756573742e00000000000000000000000000000000604482015290519081900360640190fd5b600160008681526003602052604090206006015460ff1660048111156118ee57fe5b14611943576040805160e560020a62461bcd02815260206004820152601f60248201527f4d757374206265206174206e6f742d636f6e6669726d65642073746174652e00604482015290519081900360640190fd5b60008581526003602052604081206004015490945092508391505b82821015611e2657600085815260036020526040902060040180548390811061198357fe5b600091825260209091200154600160a060020a0316331415611e1b57600085815260036020526040902060050154600194504262093a809091011015611b2f5760008581526003602052604090206005015442621275009091011015611a3e576119ec8561592b565b60008581526003602081905260408220805460ff19168155600181018390556002810183905590810182905590611a266004830182615a25565b5060006005820155600601805460ff19169055611a5b565b6000858152600360205260409020600601805460ff191660041790555b600085815260036020526040908190209051339187917f9f3ca7a04988021200a04e0775f46648683bffe7203608269a66c371befe5685918d918d918d918d91600401908086600a811115611aac57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015611b1857602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611afa575b5050965050505050505060405180910390a3611e16565b60001983018214611bc057600085815260036020526040902060040180546000198501908110611b5b57fe5b6000918252602080832090910154878352600390915260409091206004018054600160a060020a039092169184908110611b9157fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b600085815260036020526040902060040180546000198501908110611be157fe5b600091825260208083209091018054600160a060020a0319169055868252600390526040902060040154611c1c90600163ffffffff61591416565b6000868152600360205260409020611c379060040182615a01565b5060008581526003602081905260409182902080546001820154600283015493830154945133958b957f9c174b2536ba49e3478ca649dac74d9e9f71f70adf70f193e780eabbfcdc367c9560ff9095169490926004909101908086600a811115611c9d57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015611d0957602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611ceb575b5050965050505050505060405180910390a36000858152600360205260409020600401541515611e1657611d3c8561592b565b60008581526003602081905260408220805460ff19168155600181018390556002810183905590810182905590611d766004830182615a25565b506000600582018190556006909101805460ff19169055858152600360208190526040918290208054600182015460028301549290930154935133948a947fbfda049a0206fd9c90ed4a3170f5bfaad83c323a16835dd68fea92faa247c2cd9460ff9094169390929091908085600a811115611dee57fe5b60ff168152602081019490945250604080840192909252606083015251908190036080019150a35b611e26565b60019091019061195e565b831515611e7d576040805160e560020a62461bcd02815260206004820152601d60248201527f4d73672e73656e64657220686173206e6f74207265717565737465642e000000604482015290519081900360640190fd5b505050505050505050565b600060606000806000611e9d89898989614af1565b600081815260036020908152604091829020600581015460068201546004909201805485518186028101860190965280865295965086959094919360ff90931692859190830182828015611f1a57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611efc575b50505050509250945094509450945050945094509450949050565b600481565b600c5460ff1681565b60408051808201909152600b81527f41646472657373426f6f6b000000000000000000000000000000000000000000602082015281565b600080333014611fc2576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b8284600160a060020a031663444263466040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561200157600080fd5b505af1158015612015573d6000803e3d6000fd5b505050506040513d602081101561202b57600080fd5b505114612082576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c6964204b49522076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b505060068054600160a060020a03848116600160a060020a031983161790925516600081156121185781600160a060020a031663444263466040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156120e957600080fd5b505af11580156120fd573d6000803e3d6000fd5b505050506040513d602081101561211357600080fd5b505190505b60408051600160a060020a038085168252602082018490528616818301526060810185905290517ffdccdf242038c2d09605009fbb95e03f75cdbd106d0a9e52a1670be9553c88489181900360800190a150505050565b6000803330146121b7576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b505060045460005b8181101561223b57600360006004838154811015156121da57fe5b600091825260208083209091015483528201929092526040018120805460ff19168155600181018290556002810182905560038101829055906122206004830182615a25565b5060006005820155600601805460ff191690556001016121bf565b61224760046000615a25565b6040517f907527d30089abd16e30f06ddbbbc18480505176262f19bc16c1fbf9262f9c6b90600090a15050565b600c54610100900460ff1681565b60003330146122c9576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b50600160a060020a03811660008181526008602052604090205460098054919291839081106122f457fe5b600091825260209091200154600160a060020a03161461234c576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b6009546001106123a6576040805160e560020a62461bcd02815260206004820152601b60248201527f434e2073686f756c64206265206d6f7265207468616e206f6e652e0000000000604482015290519081900360640190fd5b6009546000190181101561251e576009805460001981019081106123c657fe5b60009182526020909120015460098054600160a060020a0390921691839081106123ec57fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600954600a805490916000190190811061242b57fe5b600091825260209091200154600a8054600160a060020a03909216918390811061245157fe5b60009182526020909120018054600160a060020a031916600160a060020a0392909216919091179055600954600b805490916000190190811061249057fe5b600091825260209091200154600b8054600160a060020a0390921691839081106124b657fe5b600091825260208220018054600160a060020a031916600160a060020a039390931692909217909155600980548392600892909160001981019081106124f857fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020555b600160a060020a03821660009081526008602052604081205560098054600019810190811061254957fe5b60009182526020909120018054600160a060020a031916905560095461257690600163ffffffff61591416565b612581600982615a01565b50600a8054600019810190811061259457fe5b60009182526020909120018054600160a060020a0319169055600a546125c190600163ffffffff61591416565b6125cc600a82615a01565b50600b805460001981019081106125df57fe5b60009182526020909120018054600160a060020a0319169055600b5461260c90600163ffffffff61591416565b612617600b82615a01565b5060408051600160a060020a038416815290517fa30079721e55931e89e7cdb421712ad0fcc817e7cac8fe954aa7ed0d46b9c42d9181900360200190a15050565b603281565b600754600160a060020a031681565b3330146126b1576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600160a060020a038116600090815260026020526040902054819060ff1615612724576040805160e560020a62461bcd02815260206004820152601460248201527f41646d696e20616c72656164792065786974732e000000000000000000000000604482015290519081900360640190fd5b60005461273890600163ffffffff6159e816565b6001546032821115801561274c5750818111155b801561275757508015155b801561276257508115155b15156127a6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b600160a060020a0384166000818152600260205260408120805460ff19166001908117909155815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018054600160a060020a031916909117905561281161216f565b604051600160a060020a038516907fad6de4452a631e641cb59902236607946ce9272b9b981f2f80e8d129cb9084ba90600090a250505050565b600c54606090819081908190600090819060ff161515612884576040805160008082526020820190815281830190925294509250612b2f565b6009805490506003026002016040519080825280602002602001820160405280156128b9578160200160208202803883390190505b5093506009805490506003026002016040519080825280602002602001820160405280156128f1578160200160208202803883390190505b506009549093509150600090505b81811015612a71576000848260030281518110151561291a57fe5b60ff909216602092830290910190910152600980548290811061293957fe5b6000918252602090912001548351600160a060020a039091169084906003840290811061296257fe5b600160a060020a039092166020928302909101909101528351600190859060038402830190811061298f57fe5b60ff909216602092830290910190910152600a8054829081106129ae57fe5b6000918252602090912001548351600160a060020a03909116908490600384026001019081106129da57fe5b600160a060020a0390921660209283029091019091015283516002908590600384028301908110612a0757fe5b60ff909216602092830290910190910152600b805482908110612a2657fe5b6000918252602090912001548351600160a060020a0390911690849060026003850201908110612a5257fe5b600160a060020a039092166020928302909101909101526001016128ff565b60038483600302815181101515612a8457fe5b60ff9092166020928302909101909101526005548351600160a060020a0390911690849060038502908110612ab557fe5b600160a060020a039092166020928302909101909101528351600490859060016003860201908110612ae357fe5b60ff9092166020928302909101909101526006548351600160a060020a0390911690849060038502600101908110612b1757fe5b600160a060020a039092166020928302909101909101525b509194909350915050565b600081565b606481565b600080838360328211801590612b5a5750818111155b8015612b6557508015155b8015612b7057508115155b1515612bb4576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b7388bb3838aa0a140acb73eeb3d4b25a8d3afd58d43314612c1f576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c69642073656e6465722e0000000000000000000000000000000000604482015290519081900360640190fd5b600c54610100900460ff1615612c7f576040805160e560020a62461bcd02815260206004820152601460248201527f416c726561647920636f6e73747275637465642e000000000000000000000000604482015290519081900360640190fd5b600c805460ff19169055859350600092505b83831015612da65760026000888886818110612ca957fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff16158015612d015750868684818110612ce357fe5b90506020020135600160a060020a0316600160a060020a0316600014155b1515612d57576040805160e560020a62461bcd02815260206004820152601e60248201527f41646472657373206973206e756c6c206f72206e6f7420756e697175652e0000604482015290519081900360640190fd5b600160026000898987818110612d6957fe5b60209081029290920135600160a060020a0316835250810191909152604001600020805460ff191691151591909117905560019290920191612c91565b612db260008888615a46565b506001859055600c805461ff001916610100179055604080518082018252600b81527f41646472657373426f6f6b00000000000000000000000000000000000000000060208083019182528351938401899052606080855283519085015282517fc5caa942b8f8ea45a2e094d941dbba0ef9c0307f34c81ce78e71bfb128d6b25a946000938b939192839283019160808401918083838a5b83811015612e62578181015183820152602001612e4a565b50505050905090810190601f168015612e8f5780820380516001836020036101000a031916815260200191505b508381038252858181548152602001915080548015612ed757602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311612eb9575b50509550505050505060405180910390a150505050505050565b600160a060020a038116600090815260026020526040812054829060ff161515612f53576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff161515612faa576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b83600160a060020a0381161515612ff9576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b60005461300d90600163ffffffff61591416565b600154603282111580156130215750818111155b801561302c57508015155b801561303757508115155b151561307b576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b6130926002600160a060020a038916600080614af1565b95506130ab6002600160a060020a038916600080614bc4565b6130b4866151f5565b80156130df5750600160008781526003602052604090206006015460ff1660048111156130dd57fe5b145b156130ed576130ed86615210565b50505050505050565b60008181526003602081815260408084208054600182015460028301549583015460058401546006850154600490950180548751818a0281018a019098528088528a998a998a996060998b998a9960ff91821699909895979096909594919092169291859183018282801561319457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311613176575b505050505092509650965096509650965096509650919395979092949650565b60008080808085600160a060020a0381161515613209576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b600a546000965086955093508492505b8383101561326457600a80543391908590811061323257fe5b600091825260209091200154600160a060020a031614156132595760019550829450613264565b600190920191613219565b8515156132bb576040805160e560020a62461bcd02815260206004820152601e60248201527f4d73672e73656e646572206973206e6f7420434e20636f6e74726163742e0000604482015290519081900360640190fd5b600b8054869081106132c957fe5b600091825260209091200154600b8054600160a060020a0390921693508891879081106132f257fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055507faa5c92ffd739bc0b8b117b671e7d713917ddb1440b436263a3ea106d70c6f05f60098681548110151561335057fe5b600091825260209091200154600b8054600160a060020a03909216918591908990811061337957fe5b6000918252602091829020015460408051600160a060020a03958616815293851692840192909252929092168183015290519081900360600190a150505050505050565b3360008181526002602052604081205490919060ff161515613417576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b600160a060020a038316600090815260026020526040902054839060ff161561348a576040805160e560020a62461bcd02815260206004820152601460248201527f41646d696e20616c72656164792065786974732e000000000000000000000000604482015290519081900360640190fd5b83600160a060020a03811615156134d9576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b6000546134ed90600163ffffffff6159e816565b600154603282111580156135015750818111155b801561350c57508015155b801561351757508115155b151561355b576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b6135726001600160a060020a038916600080614af1565b95506130ab6001600160a060020a038916600080614bc4565b3360008181526002602052604081205490919060ff1615156135e5576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b6135f3600460008080614af1565b9150613603600460008080614bc4565b61360c826151f5565b80156136375750600160008381526003602052604090206006015460ff16600481111561363557fe5b145b156136455761364582615210565b5050565b62093a8081565b600082600160a060020a03811615156136a1576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff1615156136f8576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b8385600160a060020a031663444263466040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561373757600080fd5b505af115801561374b573d6000803e3d6000fd5b505050506040513d602081101561376157600080fd5b5051146137b8576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c6964204b49522076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b6137cf6007600160a060020a038716866000614af1565b9250610fef6007600160a060020a038716866000614bc4565b6212750081565b333014613834576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b60078054600160a060020a031916600160a060020a03838116919091179182905560408051929091168252517f508aacd44cfe23a34a8c2643ab08c3410cf5505632cfce58dcfa0efa2fd2ff37916020908290030190a150565b600381565b60008082600160a060020a03811615156138e5576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff16151561393c576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b600160a060020a03851660008181526008602052604090205460098054919650908690811061396757fe5b600091825260209091200154600160a060020a0316146139bf576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b600954600110613a19576040805160e560020a62461bcd02815260206004820152601b60248201527f434e2073686f756c64206265206d6f7265207468616e206f6e652e0000000000604482015290519081900360640190fd5b613a306009600160a060020a038716600080614af1565b9250610fef6009600160a060020a038716600080614bc4565b60015481565b600654600160a060020a031681565b333014613aa3576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b6000548160328211801590613ab85750818111155b8015613ac357508015155b8015613ace57508115155b1515613b12576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b600154831415613b6c576040805160e560020a62461bcd02815260206004820152601160248201527f53616d6520726571756972656d656e742e000000000000000000000000000000604482015290519081900360640190fd5b6001839055613b7961216f565b6040805184815290517f8951393946c27b45080aad111464c16c70f3d5e7d24b114a627334441961bf5f9181900360200190a1505050565b600080333014613bf9576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b8284600160a060020a0316630f6100726040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015613c3857600080fd5b505af1158015613c4c573d6000803e3d6000fd5b505050506040513d6020811015613c6257600080fd5b505114613cb9576040805160e560020a62461bcd02815260206004820152601460248201527f496e76616c696420506f432076657273696f6e2e000000000000000000000000604482015290519081900360640190fd5b505060058054600160a060020a03848116600160a060020a03198316179092551660008115613d4f5781600160a060020a0316630f6100726040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015613d2057600080fd5b505af1158015613d34573d6000803e3d6000fd5b505050506040513d6020811015613d4a57600080fd5b505190505b60408051600160a060020a038085168252602082018490528616818301526060810185905290517fd531725ac89042f190fd73adfdeff435e07500f1a92b4b87743f1bcf91acb3a79181900360800190a150505050565b600083600160a060020a0381161515613df7576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b83600160a060020a0381161515613e46576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b83600160a060020a0381161515613e95576040805160e560020a62461bcd0281526020600482015260106024820152600080516020615bba833981519152604482015290519081900360640190fd5b3360008181526002602052604090205460ff161515613eec576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b60095460001015613f8a57600160a060020a038816600081815260086020526040902054600980549091908110613f1f57fe5b600091825260209091200154600160a060020a03161415613f8a576040805160e560020a62461bcd02815260206004820152601960248201527f434e206e6f646520494420616c72656164792065786973742e00000000000000604482015290519081900360640190fd5b87600160a060020a031687600160a060020a031663139d7fed6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015613fd257600080fd5b505af1158015613fe6573d6000803e3d6000fd5b505050506040513d6020811015613ffc57600080fd5b5051600160a060020a03161461404a576040805160e560020a62461bcd0281526020600482015260136024820152600080516020615b9a833981519152604482015290519081900360640190fd5b85600160a060020a031687600160a060020a0316638cf57cb96040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561409257600080fd5b505af11580156140a6573d6000803e3d6000fd5b505050506040513d60208110156140bc57600080fd5b5051600160a060020a03161461411c576040805160e560020a62461bcd02815260206004820152601a60248201527f496e76616c696420434e2072657761726420616464726573732e000000000000604482015290519081900360640190fd5b86600160a060020a031663392e53cd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561415a57600080fd5b505af115801561416e573d6000803e3d6000fd5b505050506040513d602081101561418457600080fd5b505115156001146141df576040805160e560020a62461bcd02815260206004820152601f60248201527f434e20636f6e7472616374206973206e6f7420696e697469616c697a65642e00604482015290519081900360640190fd5b6141fb6008600160a060020a03808b16908a8116908a16614af1565b94506142196008600160a060020a03808b16908a8116908a16614bc4565b614222856151f5565b801561424d5750600160008681526003602052604090206006015460ff16600481111561424b57fe5b145b1561425b5761425b85615210565b5050505050505050565b3330146142aa576040805160e560020a62461bcd02815260206004820152601b6024820152600080516020615bda833981519152604482015290519081900360640190fd5b600c5460ff1615614305576040805160e560020a62461bcd02815260206004820152601260248201527f416c7265616479206163746976617465642e0000000000000000000000000000604482015290519081900360640190fd5b600054151561435e576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f2061646d696e206973206c69737465642e00000000000000000000000000604482015290519081900360640190fd5b600554600160a060020a031615156143c0576040805160e560020a62461bcd02815260206004820152601f60248201527f506f4320636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b600654600160a060020a03161515614422576040805160e560020a62461bcd02815260206004820152601f60248201527f4b495220636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b600954151561447b576040805160e560020a62461bcd02815260206004820152601560248201527f4e6f206e6f6465204944206973206c69737465642e0000000000000000000000604482015290519081900360640190fd5b600a54600954146144fc576040805160e560020a62461bcd02815260206004820152603660248201527f496e76616c6964206c656e677468206265747765656e206e6f6465204944732060448201527f616e64207374616b696e6720636f6e7472616374732e00000000000000000000606482015290519081900360840190fd5b600b54600a541461457d576040805160e560020a62461bcd02815260206004820152603e60248201527f496e76616c6964206c656e677468206265747765656e207374616b696e67206360448201527f6f6e74726163747320616e6420726577617264206164647265737365732e0000606482015290519081900360840190fd5b600c805460ff191660011790556040517f29d89931226d613bf878a0be8c635eaf2049121c8c68d5ad80a78f0ac9005d4b90600090a1565b600554600160a060020a031681565b6060600480548060200260200160405190810160405280929190818152602001828054801561461357602002820191906000526020600020905b815481526001909101906020018083116145fe575b505050505090505b90565b600181565b3360008181526002602052604081205490919060ff16151561467d576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b60005483603282118015906146925750818111155b801561469d57508015155b80156146a857508115155b15156146ec576040805160e560020a62461bcd0281526020600482015260146024820152600080516020615bfa833981519152604482015290519081900360640190fd5b600154851415614746576040805160e560020a62461bcd02815260206004820152601160248201527f53616d6520726571756972656d656e742e000000000000000000000000000000604482015290519081900360640190fd5b614754600386600080614af1565b9350614764600386600080614bc4565b61476d846151f5565b80156147985750600160008581526003602052604090206006015460ff16600481111561479657fe5b145b156110315761103184615210565b3360008181526002602052604081205490919060ff161515614800576040805160e560020a62461bcd0281526020600482015260156024820152600080516020615b7a833981519152604482015290519081900360640190fd5b600c5460ff161561485b576040805160e560020a62461bcd02815260206004820152601260248201527f416c7265616479206163746976617465642e0000000000000000000000000000604482015290519081900360640190fd5b60005415156148b4576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f2061646d696e206973206c69737465642e00000000000000000000000000604482015290519081900360640190fd5b600554600160a060020a03161515614916576040805160e560020a62461bcd02815260206004820152601f60248201527f506f4320636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b600654600160a060020a03161515614978576040805160e560020a62461bcd02815260206004820152601f60248201527f4b495220636f6e7472616374206973206e6f7420726567697374657265642e00604482015290519081900360640190fd5b60095415156149d1576040805160e560020a62461bcd02815260206004820152601560248201527f4e6f206e6f6465204944206973206c69737465642e0000000000000000000000604482015290519081900360640190fd5b600a5460095414614a52576040805160e560020a62461bcd02815260206004820152603660248201527f496e76616c6964206c656e677468206265747765656e206e6f6465204944732060448201527f616e64207374616b696e6720636f6e7472616374732e00000000000000000000606482015290519081900360840190fd5b600b54600a5414614ad3576040805160e560020a62461bcd02815260206004820152603e60248201527f496e76616c6964206c656e677468206265747765656e207374616b696e67206360448201527f6f6e74726163747320616e6420726577617264206164647265737365732e0000606482015290519081900360840190fd5b614ae1600560008080614af1565b9150613603600560008080614bc4565b6000848484846040516020018085600a811115614b0a57fe5b60ff167f010000000000000000000000000000000000000000000000000000000000000002815260018101949094525060218301919091526041808301919091526040805180840390920182526061909201918290528051909250819060208401908083835b60208310614b8f5780518252601f199092019160209182019101614b70565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912098975050505050505050565b6000806000614bd587878787614af1565b60008181526003602052604090206005015490935015614f5e5760008381526003602052604090206005015442621275009091011015614c6a57614c188361592b565b60008381526003602081905260408220805460ff19168155600181018390556002810183905590810182905590614c526004830182615a25565b5060006005820155600601805460ff19169055614f5e565b6000838152600360205260409020600501544262093a809091011015614da257600460008481526003602052604090206006015460ff166004811115614cac57fe5b14614cce576000838152600360205260409020600601805460ff191660041790555b600083815260036020526040908190209051339185917f9f3ca7a04988021200a04e0775f46648683bffe7203608269a66c371befe5685918b918b918b918b91600401908086600a811115614d1f57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015614d8b57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311614d6d575b5050965050505050505060405180910390a3614f5e565b6000838152600360205260409020600501544210614f5e575050600081815260036020526040812060040154905b81811015614e69576000838152600360205260409020600401805482908110614df557fe5b600091825260209091200154600160a060020a0316331415614e61576040805160e560020a62461bcd02815260206004820152601d60248201527f4d73672e73656e64657220616c7265616479207265717565737465642e000000604482015290519081900360640190fd5b600101614dd0565b600083815260036020908152604080832060040180546001810182558185529284209092018054600160a060020a03191633908117909155928690525185917fb7b03afe355fcf2b1d00e020db2b1a902b9ee1b1c1d995626c1e18c957340ea8918b918b918b918b918086600a811115614edf57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c0019084908015614f4b57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311614f2d575b5050965050505050505060405180910390a35b60008381526003602052604090206005015415156130ed57600454606411614fe357600487600a811115614f8e57fe5b14614fe3576040805160e560020a62461bcd02815260206004820152601560248201527f52657175657374206c6973742069732066756c6c2e0000000000000000000000604482015290519081900360640190fd5b60e06040519081016040528088600a811115614ffb57fe5b81526020808201899052604080830189905260608301889052805160008082529281019091526080909201919050815242602082015260400160019052600084815260036020526040902081518154829060ff1916600183600a81111561505e57fe5b021790555060208281015160018301556040830151600283015560608301516003830155608083015180516150999260048501920190615aa9565b5060a0820151600582015560c082015160068201805460ff191660018360048111156150c157fe5b0217905550505060008381526003602090815260408083206004908101805460018181018355828752948620018054600160a060020a0319163390811790915582549485019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909301879055928690525185917fb7b03afe355fcf2b1d00e020db2b1a902b9ee1b1c1d995626c1e18c957340ea8918b918b918b918b918086600a81111561516e57fe5b60ff16815260208101869052604081018590526060810184905260a082820381016080830190815284549183018290529160c00190849080156151da57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116151bc575b5050965050505050505060405180910390a350505050505050565b60015460009182526003602052604090912060040154101590565b600061521a615afe565b600083815260036020526040808220815160e0810190925280549294509091829060ff16600a81111561524957fe5b600a81111561525457fe5b8152600182015460208083019190915260028301546040808401919091526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156152d557602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116152b7575b505050918352505060058201546020820152600682015460409091019060ff16600481111561530057fe5b600481111561530b57fe5b905250905060018151600a81111561531f57fe5b1415615389576020810151604080517f70480275000000000000000000000000000000000000000000000000000000008152600160a060020a0390921660048301525130916370480275916024808301926000929190829003018183875af192505050915061579a565b60028151600a81111561539857fe5b1415615402576020810151604080517f27e1f7df000000000000000000000000000000000000000000000000000000008152600160a060020a0390921660048301525130916327e1f7df916024808301926000929190829003018183875af192505050915061579a565b60038151600a81111561541157fe5b1415615473576020810151604080517fc47afb3a000000000000000000000000000000000000000000000000000000008152600481019290925251309163c47afb3a916024808301926000929190829003018183875af192505050915061579a565b60048151600a81111561548257fe5b14156154c55730600160a060020a0316634f97638f6040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050915061579a565b60058151600a8111156154d457fe5b14156155175730600160a060020a031663cec924666040518163ffffffff1660e060020a0281526004016000604051808303816000875af192505050915061579a565b60068151600a81111561552657fe5b141561559957602081015160408083015181517fc7e9de75000000000000000000000000000000000000000000000000000000008152600160a060020a039093166004840152602483015251309163c7e9de75916044808301926000929190829003018183875af192505050915061579a565b60078151600a8111156155a857fe5b141561561b57602081015160408083015181517f4c5d435c000000000000000000000000000000000000000000000000000000008152600160a060020a0390931660048401526024830152513091634c5d435c916044808301926000929190829003018183875af192505050915061579a565b60088151600a81111561562a57fe5b14156156ad576020810151604080830151606084015182517f298b3c61000000000000000000000000000000000000000000000000000000008152600160a060020a0394851660048201529184166024830152909216604483015251309163298b3c61916064808301926000929190829003018183875af192505050915061579a565b60098151600a8111156156bc57fe5b1415615726576020810151604080517f579740db000000000000000000000000000000000000000000000000000000008152600160a060020a03909216600483015251309163579740db916024808301926000929190829003018183875af192505050915061579a565b600a8151600a81111561573557fe5b141561579a576020810151604080517fafaaf330000000000000000000000000000000000000000000000000000000008152600160a060020a03909216600483015251309163afaaf330916024808301926000929190829003018183875af194505050505b6157a38361592b565b811561585d57600083815260036020526040902060050154156157dd576000838152600360205260409020600601805460ff191660021790555b33600160a060020a031683600019167fc55c9229184beabeee72b6970a96691b4200919e47579cc4b9be50a1bec7ef1183600001518460200151856040015186606001516040518085600a81111561583157fe5b60ff168152602081019490945250604080840192909252606083015251908190036080019150a36117f1565b60008381526003602052604090206005015415615894576000838152600360208190526040909120600601805460ff191690911790555b33600160a060020a031683600019167ff151a3ee41626c2511372320f09f7957af81c8c1cde8cdf3f05a5979626eaaf383600001518460200151856040015186606001516040518085600a8111156158e857fe5b60ff168152602081019490945250604080840192909252606083015251908190036080019150a3505050565b6000808383111561592457600080fd5b5050900390565b60045460005b818110156117f157600480548290811061594757fe5b6000918252602090912001548314156159e0576000198201811461599e5760048054600019840190811061597757fe5b906000526020600020015460048281548110151561599157fe5b6000918252602090912001555b6004805460001984019081106159b057fe5b60009182526020822001556004546159cf90600163ffffffff61591416565b6159da600482615a01565b506117f1565b600101615931565b6000828201838110156159fa57600080fd5b9392505050565b8154818355818111156117f1576000838152602090206117f1918101908301615b3b565b5080546000825590600052602060002090810190615a439190615b3b565b50565b828054828255906000526020600020908101928215615a99579160200282015b82811115615a99578154600160a060020a031916600160a060020a03843516178255602090920191600190910190615a66565b50615aa5929150615b55565b5090565b828054828255906000526020600020908101928215615a99579160200282015b82811115615a995782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190615ac9565b6040805160e081019091528060008152600060208201819052604082018190526060808301829052608083015260a0820181905260c09091015290565b61461b91905b80821115615aa55760008155600101615b41565b61461b91905b80821115615aa5578054600160a060020a0319168155600101615b5b560041646472657373206973206e6f742061646d696e2e0000000000000000000000496e76616c696420434e206e6f64652049442e0000000000000000000000000041646472657373206973206e756c6c2e000000000000000000000000000000004e6f742061206d756c74697369672d7472616e73616374696f6e2e0000000000496e76616c696420726571756972656d656e742e000000000000000000000000a165627a7a7230582007320485103bb418db53fd7eb24f69d0f455d28d1b5b146eb3e7fa6237cb69f10029`

// DeployAddressBook deploys a new Klaytn contract, binding an instance of AddressBook to it.
func DeployAddressBook(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *AddressBook, error) {
	parsed, err := abi.JSON(strings.NewReader(AddressBookABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(AddressBookBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AddressBook{AddressBookCaller: AddressBookCaller{contract: contract}, AddressBookTransactor: AddressBookTransactor{contract: contract}, AddressBookFilterer: AddressBookFilterer{contract: contract}}, nil
}

// AddressBook is an auto generated Go binding around a Klaytn contract.
type AddressBook struct {
	AddressBookCaller     // Read-only binding to the contract
	AddressBookTransactor // Write-only binding to the contract
	AddressBookFilterer   // Log filterer for contract events
}

// AddressBookCaller is an auto generated read-only Go binding around a Klaytn contract.
type AddressBookCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AddressBookTransactor is an auto generated write-only Go binding around a Klaytn contract.
type AddressBookTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AddressBookFilterer is an auto generated log filtering Go binding around a Klaytn contract events.
type AddressBookFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AddressBookSession is an auto generated Go binding around a Klaytn contract,
// with pre-set call and transact options.
type AddressBookSession struct {
	Contract     *AddressBook      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AddressBookCallerSession is an auto generated read-only Go binding around a Klaytn contract,
// with pre-set call options.
type AddressBookCallerSession struct {
	Contract *AddressBookCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// AddressBookTransactorSession is an auto generated write-only Go binding around a Klaytn contract,
// with pre-set transact options.
type AddressBookTransactorSession struct {
	Contract     *AddressBookTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// AddressBookRaw is an auto generated low-level Go binding around a Klaytn contract.
type AddressBookRaw struct {
	Contract *AddressBook // Generic contract binding to access the raw methods on
}

// AddressBookCallerRaw is an auto generated low-level read-only Go binding around a Klaytn contract.
type AddressBookCallerRaw struct {
	Contract *AddressBookCaller // Generic read-only contract binding to access the raw methods on
}

// AddressBookTransactorRaw is an auto generated low-level write-only Go binding around a Klaytn contract.
type AddressBookTransactorRaw struct {
	Contract *AddressBookTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAddressBook creates a new instance of AddressBook, bound to a specific deployed contract.
func NewAddressBook(address common.Address, backend bind.ContractBackend) (*AddressBook, error) {
	contract, err := bindAddressBook(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AddressBook{AddressBookCaller: AddressBookCaller{contract: contract}, AddressBookTransactor: AddressBookTransactor{contract: contract}, AddressBookFilterer: AddressBookFilterer{contract: contract}}, nil
}

// NewAddressBookCaller creates a new read-only instance of AddressBook, bound to a specific deployed contract.
func NewAddressBookCaller(address common.Address, caller bind.ContractCaller) (*AddressBookCaller, error) {
	contract, err := bindAddressBook(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AddressBookCaller{contract: contract}, nil
}

// NewAddressBookTransactor creates a new write-only instance of AddressBook, bound to a specific deployed contract.
func NewAddressBookTransactor(address common.Address, transactor bind.ContractTransactor) (*AddressBookTransactor, error) {
	contract, err := bindAddressBook(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AddressBookTransactor{contract: contract}, nil
}

// NewAddressBookFilterer creates a new log filterer instance of AddressBook, bound to a specific deployed contract.
func NewAddressBookFilterer(address common.Address, filterer bind.ContractFilterer) (*AddressBookFilterer, error) {
	contract, err := bindAddressBook(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AddressBookFilterer{contract: contract}, nil
}

// bindAddressBook binds a generic wrapper to an already deployed contract.
func bindAddressBook(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AddressBookABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AddressBook *AddressBookRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _AddressBook.Contract.AddressBookCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AddressBook *AddressBookRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AddressBook.Contract.AddressBookTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AddressBook *AddressBookRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AddressBook.Contract.AddressBookTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AddressBook *AddressBookCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _AddressBook.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AddressBook *AddressBookTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AddressBook.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AddressBook *AddressBookTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AddressBook.Contract.contract.Transact(opts, method, params...)
}

// CNNODEIDTYPE is a free data retrieval call binding the contract method 0x76674c54.
//
// Solidity: function CN_NODE_ID_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCaller) CNNODEIDTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "CN_NODE_ID_TYPE")
	return *ret0, err
}

// CNNODEIDTYPE is a free data retrieval call binding the contract method 0x76674c54.
//
// Solidity: function CN_NODE_ID_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookSession) CNNODEIDTYPE() (uint8, error) {
	return _AddressBook.Contract.CNNODEIDTYPE(&_AddressBook.CallOpts)
}

// CNNODEIDTYPE is a free data retrieval call binding the contract method 0x76674c54.
//
// Solidity: function CN_NODE_ID_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCallerSession) CNNODEIDTYPE() (uint8, error) {
	return _AddressBook.Contract.CNNODEIDTYPE(&_AddressBook.CallOpts)
}

// CNREWARDADDRESSTYPE is a free data retrieval call binding the contract method 0x32b91e85.
//
// Solidity: function CN_REWARD_ADDRESS_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCaller) CNREWARDADDRESSTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "CN_REWARD_ADDRESS_TYPE")
	return *ret0, err
}

// CNREWARDADDRESSTYPE is a free data retrieval call binding the contract method 0x32b91e85.
//
// Solidity: function CN_REWARD_ADDRESS_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookSession) CNREWARDADDRESSTYPE() (uint8, error) {
	return _AddressBook.Contract.CNREWARDADDRESSTYPE(&_AddressBook.CallOpts)
}

// CNREWARDADDRESSTYPE is a free data retrieval call binding the contract method 0x32b91e85.
//
// Solidity: function CN_REWARD_ADDRESS_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCallerSession) CNREWARDADDRESSTYPE() (uint8, error) {
	return _AddressBook.Contract.CNREWARDADDRESSTYPE(&_AddressBook.CallOpts)
}

// CNSTAKINGADDRESSTYPE is a free data retrieval call binding the contract method 0xde5bbfbc.
//
// Solidity: function CN_STAKING_ADDRESS_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCaller) CNSTAKINGADDRESSTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "CN_STAKING_ADDRESS_TYPE")
	return *ret0, err
}

// CNSTAKINGADDRESSTYPE is a free data retrieval call binding the contract method 0xde5bbfbc.
//
// Solidity: function CN_STAKING_ADDRESS_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookSession) CNSTAKINGADDRESSTYPE() (uint8, error) {
	return _AddressBook.Contract.CNSTAKINGADDRESSTYPE(&_AddressBook.CallOpts)
}

// CNSTAKINGADDRESSTYPE is a free data retrieval call binding the contract method 0xde5bbfbc.
//
// Solidity: function CN_STAKING_ADDRESS_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCallerSession) CNSTAKINGADDRESSTYPE() (uint8, error) {
	return _AddressBook.Contract.CNSTAKINGADDRESSTYPE(&_AddressBook.CallOpts)
}

// CONTRACTTYPE is a free data retrieval call binding the contract method 0x4b6a94cc.
//
// Solidity: function CONTRACT_TYPE() constant returns(string)
func (_AddressBook *AddressBookCaller) CONTRACTTYPE(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "CONTRACT_TYPE")
	return *ret0, err
}

// CONTRACTTYPE is a free data retrieval call binding the contract method 0x4b6a94cc.
//
// Solidity: function CONTRACT_TYPE() constant returns(string)
func (_AddressBook *AddressBookSession) CONTRACTTYPE() (string, error) {
	return _AddressBook.Contract.CONTRACTTYPE(&_AddressBook.CallOpts)
}

// CONTRACTTYPE is a free data retrieval call binding the contract method 0x4b6a94cc.
//
// Solidity: function CONTRACT_TYPE() constant returns(string)
func (_AddressBook *AddressBookCallerSession) CONTRACTTYPE() (string, error) {
	return _AddressBook.Contract.CONTRACTTYPE(&_AddressBook.CallOpts)
}

// KIRCONTRACTTYPE is a free data retrieval call binding the contract method 0x41b6945c.
//
// Solidity: function KIR_CONTRACT_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCaller) KIRCONTRACTTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "KIR_CONTRACT_TYPE")
	return *ret0, err
}

// KIRCONTRACTTYPE is a free data retrieval call binding the contract method 0x41b6945c.
//
// Solidity: function KIR_CONTRACT_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookSession) KIRCONTRACTTYPE() (uint8, error) {
	return _AddressBook.Contract.KIRCONTRACTTYPE(&_AddressBook.CallOpts)
}

// KIRCONTRACTTYPE is a free data retrieval call binding the contract method 0x41b6945c.
//
// Solidity: function KIR_CONTRACT_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCallerSession) KIRCONTRACTTYPE() (uint8, error) {
	return _AddressBook.Contract.KIRCONTRACTTYPE(&_AddressBook.CallOpts)
}

// MAXADMIN is a free data retrieval call binding the contract method 0x58d65880.
//
// Solidity: function MAX_ADMIN() constant returns(uint256)
func (_AddressBook *AddressBookCaller) MAXADMIN(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "MAX_ADMIN")
	return *ret0, err
}

// MAXADMIN is a free data retrieval call binding the contract method 0x58d65880.
//
// Solidity: function MAX_ADMIN() constant returns(uint256)
func (_AddressBook *AddressBookSession) MAXADMIN() (*big.Int, error) {
	return _AddressBook.Contract.MAXADMIN(&_AddressBook.CallOpts)
}

// MAXADMIN is a free data retrieval call binding the contract method 0x58d65880.
//
// Solidity: function MAX_ADMIN() constant returns(uint256)
func (_AddressBook *AddressBookCallerSession) MAXADMIN() (*big.Int, error) {
	return _AddressBook.Contract.MAXADMIN(&_AddressBook.CallOpts)
}

// MAXPENDINGREQUEST is a free data retrieval call binding the contract method 0x778f39cb.
//
// Solidity: function MAX_PENDING_REQUEST() constant returns(uint256)
func (_AddressBook *AddressBookCaller) MAXPENDINGREQUEST(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "MAX_PENDING_REQUEST")
	return *ret0, err
}

// MAXPENDINGREQUEST is a free data retrieval call binding the contract method 0x778f39cb.
//
// Solidity: function MAX_PENDING_REQUEST() constant returns(uint256)
func (_AddressBook *AddressBookSession) MAXPENDINGREQUEST() (*big.Int, error) {
	return _AddressBook.Contract.MAXPENDINGREQUEST(&_AddressBook.CallOpts)
}

// MAXPENDINGREQUEST is a free data retrieval call binding the contract method 0x778f39cb.
//
// Solidity: function MAX_PENDING_REQUEST() constant returns(uint256)
func (_AddressBook *AddressBookCallerSession) MAXPENDINGREQUEST() (*big.Int, error) {
	return _AddressBook.Contract.MAXPENDINGREQUEST(&_AddressBook.CallOpts)
}

// ONEWEEK is a free data retrieval call binding the contract method 0x8e6f6b77.
//
// Solidity: function ONE_WEEK() constant returns(uint256)
func (_AddressBook *AddressBookCaller) ONEWEEK(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "ONE_WEEK")
	return *ret0, err
}

// ONEWEEK is a free data retrieval call binding the contract method 0x8e6f6b77.
//
// Solidity: function ONE_WEEK() constant returns(uint256)
func (_AddressBook *AddressBookSession) ONEWEEK() (*big.Int, error) {
	return _AddressBook.Contract.ONEWEEK(&_AddressBook.CallOpts)
}

// ONEWEEK is a free data retrieval call binding the contract method 0x8e6f6b77.
//
// Solidity: function ONE_WEEK() constant returns(uint256)
func (_AddressBook *AddressBookCallerSession) ONEWEEK() (*big.Int, error) {
	return _AddressBook.Contract.ONEWEEK(&_AddressBook.CallOpts)
}

// POCCONTRACTTYPE is a free data retrieval call binding the contract method 0xb50060e4.
//
// Solidity: function POC_CONTRACT_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCaller) POCCONTRACTTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "POC_CONTRACT_TYPE")
	return *ret0, err
}

// POCCONTRACTTYPE is a free data retrieval call binding the contract method 0xb50060e4.
//
// Solidity: function POC_CONTRACT_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookSession) POCCONTRACTTYPE() (uint8, error) {
	return _AddressBook.Contract.POCCONTRACTTYPE(&_AddressBook.CallOpts)
}

// POCCONTRACTTYPE is a free data retrieval call binding the contract method 0xb50060e4.
//
// Solidity: function POC_CONTRACT_TYPE() constant returns(uint8)
func (_AddressBook *AddressBookCallerSession) POCCONTRACTTYPE() (uint8, error) {
	return _AddressBook.Contract.POCCONTRACTTYPE(&_AddressBook.CallOpts)
}

// TWOWEEKS is a free data retrieval call binding the contract method 0x934d1fa4.
//
// Solidity: function TWO_WEEKS() constant returns(uint256)
func (_AddressBook *AddressBookCaller) TWOWEEKS(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "TWO_WEEKS")
	return *ret0, err
}

// TWOWEEKS is a free data retrieval call binding the contract method 0x934d1fa4.
//
// Solidity: function TWO_WEEKS() constant returns(uint256)
func (_AddressBook *AddressBookSession) TWOWEEKS() (*big.Int, error) {
	return _AddressBook.Contract.TWOWEEKS(&_AddressBook.CallOpts)
}

// TWOWEEKS is a free data retrieval call binding the contract method 0x934d1fa4.
//
// Solidity: function TWO_WEEKS() constant returns(uint256)
func (_AddressBook *AddressBookCallerSession) TWOWEEKS() (*big.Int, error) {
	return _AddressBook.Contract.TWOWEEKS(&_AddressBook.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() constant returns(uint256)
func (_AddressBook *AddressBookCaller) VERSION(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "VERSION")
	return *ret0, err
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() constant returns(uint256)
func (_AddressBook *AddressBookSession) VERSION() (*big.Int, error) {
	return _AddressBook.Contract.VERSION(&_AddressBook.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() constant returns(uint256)
func (_AddressBook *AddressBookCallerSession) VERSION() (*big.Int, error) {
	return _AddressBook.Contract.VERSION(&_AddressBook.CallOpts)
}

// GetAllAddress is a free data retrieval call binding the contract method 0x715b208b.
//
// Solidity: function getAllAddress() constant returns(uint8[], address[])
func (_AddressBook *AddressBookCaller) GetAllAddress(opts *bind.CallOpts) ([]uint8, []common.Address, error) {
	var (
		ret0 = new([]uint8)
		ret1 = new([]common.Address)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _AddressBook.contract.Call(opts, out, "getAllAddress")
	return *ret0, *ret1, err
}

// GetAllAddress is a free data retrieval call binding the contract method 0x715b208b.
//
// Solidity: function getAllAddress() constant returns(uint8[], address[])
func (_AddressBook *AddressBookSession) GetAllAddress() ([]uint8, []common.Address, error) {
	return _AddressBook.Contract.GetAllAddress(&_AddressBook.CallOpts)
}

// GetAllAddress is a free data retrieval call binding the contract method 0x715b208b.
//
// Solidity: function getAllAddress() constant returns(uint8[], address[])
func (_AddressBook *AddressBookCallerSession) GetAllAddress() ([]uint8, []common.Address, error) {
	return _AddressBook.Contract.GetAllAddress(&_AddressBook.CallOpts)
}

// GetAllAddressInfo is a free data retrieval call binding the contract method 0x160370b8.
//
// Solidity: function getAllAddressInfo() constant returns(address[], address[], address[], address, address)
func (_AddressBook *AddressBookCaller) GetAllAddressInfo(opts *bind.CallOpts) ([]common.Address, []common.Address, []common.Address, common.Address, common.Address, error) {
	var (
		ret0 = new([]common.Address)
		ret1 = new([]common.Address)
		ret2 = new([]common.Address)
		ret3 = new(common.Address)
		ret4 = new(common.Address)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _AddressBook.contract.Call(opts, out, "getAllAddressInfo")
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetAllAddressInfo is a free data retrieval call binding the contract method 0x160370b8.
//
// Solidity: function getAllAddressInfo() constant returns(address[], address[], address[], address, address)
func (_AddressBook *AddressBookSession) GetAllAddressInfo() ([]common.Address, []common.Address, []common.Address, common.Address, common.Address, error) {
	return _AddressBook.Contract.GetAllAddressInfo(&_AddressBook.CallOpts)
}

// GetAllAddressInfo is a free data retrieval call binding the contract method 0x160370b8.
//
// Solidity: function getAllAddressInfo() constant returns(address[], address[], address[], address, address)
func (_AddressBook *AddressBookCallerSession) GetAllAddressInfo() ([]common.Address, []common.Address, []common.Address, common.Address, common.Address, error) {
	return _AddressBook.Contract.GetAllAddressInfo(&_AddressBook.CallOpts)
}

// GetCnInfo is a free data retrieval call binding the contract method 0x15575d5a.
//
// Solidity: function getCnInfo(_cnNodeId address) constant returns(address, address, address)
func (_AddressBook *AddressBookCaller) GetCnInfo(opts *bind.CallOpts, _cnNodeId common.Address) (common.Address, common.Address, common.Address, error) {
	var (
		ret0 = new(common.Address)
		ret1 = new(common.Address)
		ret2 = new(common.Address)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _AddressBook.contract.Call(opts, out, "getCnInfo", _cnNodeId)
	return *ret0, *ret1, *ret2, err
}

// GetCnInfo is a free data retrieval call binding the contract method 0x15575d5a.
//
// Solidity: function getCnInfo(_cnNodeId address) constant returns(address, address, address)
func (_AddressBook *AddressBookSession) GetCnInfo(_cnNodeId common.Address) (common.Address, common.Address, common.Address, error) {
	return _AddressBook.Contract.GetCnInfo(&_AddressBook.CallOpts, _cnNodeId)
}

// GetCnInfo is a free data retrieval call binding the contract method 0x15575d5a.
//
// Solidity: function getCnInfo(_cnNodeId address) constant returns(address, address, address)
func (_AddressBook *AddressBookCallerSession) GetCnInfo(_cnNodeId common.Address) (common.Address, common.Address, common.Address, error) {
	return _AddressBook.Contract.GetCnInfo(&_AddressBook.CallOpts, _cnNodeId)
}

// GetPendingRequestList is a free data retrieval call binding the contract method 0xda34a0bd.
//
// Solidity: function getPendingRequestList() constant returns(bytes32[])
func (_AddressBook *AddressBookCaller) GetPendingRequestList(opts *bind.CallOpts) ([][32]byte, error) {
	var (
		ret0 = new([][32]byte)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "getPendingRequestList")
	return *ret0, err
}

// GetPendingRequestList is a free data retrieval call binding the contract method 0xda34a0bd.
//
// Solidity: function getPendingRequestList() constant returns(bytes32[])
func (_AddressBook *AddressBookSession) GetPendingRequestList() ([][32]byte, error) {
	return _AddressBook.Contract.GetPendingRequestList(&_AddressBook.CallOpts)
}

// GetPendingRequestList is a free data retrieval call binding the contract method 0xda34a0bd.
//
// Solidity: function getPendingRequestList() constant returns(bytes32[])
func (_AddressBook *AddressBookCallerSession) GetPendingRequestList() ([][32]byte, error) {
	return _AddressBook.Contract.GetPendingRequestList(&_AddressBook.CallOpts)
}

// GetRequestInfo is a free data retrieval call binding the contract method 0x82d67e5a.
//
// Solidity: function getRequestInfo(_id bytes32) constant returns(uint8, bytes32, bytes32, bytes32, address[], uint256, uint8)
func (_AddressBook *AddressBookCaller) GetRequestInfo(opts *bind.CallOpts, _id [32]byte) (uint8, [32]byte, [32]byte, [32]byte, []common.Address, *big.Int, uint8, error) {
	var (
		ret0 = new(uint8)
		ret1 = new([32]byte)
		ret2 = new([32]byte)
		ret3 = new([32]byte)
		ret4 = new([]common.Address)
		ret5 = new(*big.Int)
		ret6 = new(uint8)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
		ret5,
		ret6,
	}
	err := _AddressBook.contract.Call(opts, out, "getRequestInfo", _id)
	return *ret0, *ret1, *ret2, *ret3, *ret4, *ret5, *ret6, err
}

// GetRequestInfo is a free data retrieval call binding the contract method 0x82d67e5a.
//
// Solidity: function getRequestInfo(_id bytes32) constant returns(uint8, bytes32, bytes32, bytes32, address[], uint256, uint8)
func (_AddressBook *AddressBookSession) GetRequestInfo(_id [32]byte) (uint8, [32]byte, [32]byte, [32]byte, []common.Address, *big.Int, uint8, error) {
	return _AddressBook.Contract.GetRequestInfo(&_AddressBook.CallOpts, _id)
}

// GetRequestInfo is a free data retrieval call binding the contract method 0x82d67e5a.
//
// Solidity: function getRequestInfo(_id bytes32) constant returns(uint8, bytes32, bytes32, bytes32, address[], uint256, uint8)
func (_AddressBook *AddressBookCallerSession) GetRequestInfo(_id [32]byte) (uint8, [32]byte, [32]byte, [32]byte, []common.Address, *big.Int, uint8, error) {
	return _AddressBook.Contract.GetRequestInfo(&_AddressBook.CallOpts, _id)
}

// GetRequestInfoByArgs is a free data retrieval call binding the contract method 0x407091eb.
//
// Solidity: function getRequestInfoByArgs(_functionId uint8, _firstArg bytes32, _secondArg bytes32, _thirdArg bytes32) constant returns(bytes32, address[], uint256, uint8)
func (_AddressBook *AddressBookCaller) GetRequestInfoByArgs(opts *bind.CallOpts, _functionId uint8, _firstArg [32]byte, _secondArg [32]byte, _thirdArg [32]byte) ([32]byte, []common.Address, *big.Int, uint8, error) {
	var (
		ret0 = new([32]byte)
		ret1 = new([]common.Address)
		ret2 = new(*big.Int)
		ret3 = new(uint8)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _AddressBook.contract.Call(opts, out, "getRequestInfoByArgs", _functionId, _firstArg, _secondArg, _thirdArg)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetRequestInfoByArgs is a free data retrieval call binding the contract method 0x407091eb.
//
// Solidity: function getRequestInfoByArgs(_functionId uint8, _firstArg bytes32, _secondArg bytes32, _thirdArg bytes32) constant returns(bytes32, address[], uint256, uint8)
func (_AddressBook *AddressBookSession) GetRequestInfoByArgs(_functionId uint8, _firstArg [32]byte, _secondArg [32]byte, _thirdArg [32]byte) ([32]byte, []common.Address, *big.Int, uint8, error) {
	return _AddressBook.Contract.GetRequestInfoByArgs(&_AddressBook.CallOpts, _functionId, _firstArg, _secondArg, _thirdArg)
}

// GetRequestInfoByArgs is a free data retrieval call binding the contract method 0x407091eb.
//
// Solidity: function getRequestInfoByArgs(_functionId uint8, _firstArg bytes32, _secondArg bytes32, _thirdArg bytes32) constant returns(bytes32, address[], uint256, uint8)
func (_AddressBook *AddressBookCallerSession) GetRequestInfoByArgs(_functionId uint8, _firstArg [32]byte, _secondArg [32]byte, _thirdArg [32]byte) ([32]byte, []common.Address, *big.Int, uint8, error) {
	return _AddressBook.Contract.GetRequestInfoByArgs(&_AddressBook.CallOpts, _functionId, _firstArg, _secondArg, _thirdArg)
}

// GetState is a free data retrieval call binding the contract method 0x1865c57d.
//
// Solidity: function getState() constant returns(address[], uint256)
func (_AddressBook *AddressBookCaller) GetState(opts *bind.CallOpts) ([]common.Address, *big.Int, error) {
	var (
		ret0 = new([]common.Address)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _AddressBook.contract.Call(opts, out, "getState")
	return *ret0, *ret1, err
}

// GetState is a free data retrieval call binding the contract method 0x1865c57d.
//
// Solidity: function getState() constant returns(address[], uint256)
func (_AddressBook *AddressBookSession) GetState() ([]common.Address, *big.Int, error) {
	return _AddressBook.Contract.GetState(&_AddressBook.CallOpts)
}

// GetState is a free data retrieval call binding the contract method 0x1865c57d.
//
// Solidity: function getState() constant returns(address[], uint256)
func (_AddressBook *AddressBookCallerSession) GetState() ([]common.Address, *big.Int, error) {
	return _AddressBook.Contract.GetState(&_AddressBook.CallOpts)
}

// IsActivated is a free data retrieval call binding the contract method 0x4a8c1fb4.
//
// Solidity: function isActivated() constant returns(bool)
func (_AddressBook *AddressBookCaller) IsActivated(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "isActivated")
	return *ret0, err
}

// IsActivated is a free data retrieval call binding the contract method 0x4a8c1fb4.
//
// Solidity: function isActivated() constant returns(bool)
func (_AddressBook *AddressBookSession) IsActivated() (bool, error) {
	return _AddressBook.Contract.IsActivated(&_AddressBook.CallOpts)
}

// IsActivated is a free data retrieval call binding the contract method 0x4a8c1fb4.
//
// Solidity: function isActivated() constant returns(bool)
func (_AddressBook *AddressBookCallerSession) IsActivated() (bool, error) {
	return _AddressBook.Contract.IsActivated(&_AddressBook.CallOpts)
}

// IsConstructed is a free data retrieval call binding the contract method 0x50a5bb69.
//
// Solidity: function isConstructed() constant returns(bool)
func (_AddressBook *AddressBookCaller) IsConstructed(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "isConstructed")
	return *ret0, err
}

// IsConstructed is a free data retrieval call binding the contract method 0x50a5bb69.
//
// Solidity: function isConstructed() constant returns(bool)
func (_AddressBook *AddressBookSession) IsConstructed() (bool, error) {
	return _AddressBook.Contract.IsConstructed(&_AddressBook.CallOpts)
}

// IsConstructed is a free data retrieval call binding the contract method 0x50a5bb69.
//
// Solidity: function isConstructed() constant returns(bool)
func (_AddressBook *AddressBookCallerSession) IsConstructed() (bool, error) {
	return _AddressBook.Contract.IsConstructed(&_AddressBook.CallOpts)
}

// KirContractAddress is a free data retrieval call binding the contract method 0xb858dd95.
//
// Solidity: function kirContractAddress() constant returns(address)
func (_AddressBook *AddressBookCaller) KirContractAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "kirContractAddress")
	return *ret0, err
}

// KirContractAddress is a free data retrieval call binding the contract method 0xb858dd95.
//
// Solidity: function kirContractAddress() constant returns(address)
func (_AddressBook *AddressBookSession) KirContractAddress() (common.Address, error) {
	return _AddressBook.Contract.KirContractAddress(&_AddressBook.CallOpts)
}

// KirContractAddress is a free data retrieval call binding the contract method 0xb858dd95.
//
// Solidity: function kirContractAddress() constant returns(address)
func (_AddressBook *AddressBookCallerSession) KirContractAddress() (common.Address, error) {
	return _AddressBook.Contract.KirContractAddress(&_AddressBook.CallOpts)
}

// PocContractAddress is a free data retrieval call binding the contract method 0xd267eda5.
//
// Solidity: function pocContractAddress() constant returns(address)
func (_AddressBook *AddressBookCaller) PocContractAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "pocContractAddress")
	return *ret0, err
}

// PocContractAddress is a free data retrieval call binding the contract method 0xd267eda5.
//
// Solidity: function pocContractAddress() constant returns(address)
func (_AddressBook *AddressBookSession) PocContractAddress() (common.Address, error) {
	return _AddressBook.Contract.PocContractAddress(&_AddressBook.CallOpts)
}

// PocContractAddress is a free data retrieval call binding the contract method 0xd267eda5.
//
// Solidity: function pocContractAddress() constant returns(address)
func (_AddressBook *AddressBookCallerSession) PocContractAddress() (common.Address, error) {
	return _AddressBook.Contract.PocContractAddress(&_AddressBook.CallOpts)
}

// Requirement is a free data retrieval call binding the contract method 0xb7563930.
//
// Solidity: function requirement() constant returns(uint256)
func (_AddressBook *AddressBookCaller) Requirement(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "requirement")
	return *ret0, err
}

// Requirement is a free data retrieval call binding the contract method 0xb7563930.
//
// Solidity: function requirement() constant returns(uint256)
func (_AddressBook *AddressBookSession) Requirement() (*big.Int, error) {
	return _AddressBook.Contract.Requirement(&_AddressBook.CallOpts)
}

// Requirement is a free data retrieval call binding the contract method 0xb7563930.
//
// Solidity: function requirement() constant returns(uint256)
func (_AddressBook *AddressBookCallerSession) Requirement() (*big.Int, error) {
	return _AddressBook.Contract.Requirement(&_AddressBook.CallOpts)
}

// SpareContractAddress is a free data retrieval call binding the contract method 0x6abd623d.
//
// Solidity: function spareContractAddress() constant returns(address)
func (_AddressBook *AddressBookCaller) SpareContractAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AddressBook.contract.Call(opts, out, "spareContractAddress")
	return *ret0, err
}

// SpareContractAddress is a free data retrieval call binding the contract method 0x6abd623d.
//
// Solidity: function spareContractAddress() constant returns(address)
func (_AddressBook *AddressBookSession) SpareContractAddress() (common.Address, error) {
	return _AddressBook.Contract.SpareContractAddress(&_AddressBook.CallOpts)
}

// SpareContractAddress is a free data retrieval call binding the contract method 0x6abd623d.
//
// Solidity: function spareContractAddress() constant returns(address)
func (_AddressBook *AddressBookCallerSession) SpareContractAddress() (common.Address, error) {
	return _AddressBook.Contract.SpareContractAddress(&_AddressBook.CallOpts)
}

// ActivateAddressBook is a paid mutator transaction binding the contract method 0xcec92466.
//
// Solidity: function activateAddressBook() returns()
func (_AddressBook *AddressBookTransactor) ActivateAddressBook(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "activateAddressBook")
}

// ActivateAddressBook is a paid mutator transaction binding the contract method 0xcec92466.
//
// Solidity: function activateAddressBook() returns()
func (_AddressBook *AddressBookSession) ActivateAddressBook() (*types.Transaction, error) {
	return _AddressBook.Contract.ActivateAddressBook(&_AddressBook.TransactOpts)
}

// ActivateAddressBook is a paid mutator transaction binding the contract method 0xcec92466.
//
// Solidity: function activateAddressBook() returns()
func (_AddressBook *AddressBookTransactorSession) ActivateAddressBook() (*types.Transaction, error) {
	return _AddressBook.Contract.ActivateAddressBook(&_AddressBook.TransactOpts)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x70480275.
//
// Solidity: function addAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactor) AddAdmin(opts *bind.TransactOpts, _admin common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "addAdmin", _admin)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x70480275.
//
// Solidity: function addAdmin(_admin address) returns()
func (_AddressBook *AddressBookSession) AddAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.AddAdmin(&_AddressBook.TransactOpts, _admin)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x70480275.
//
// Solidity: function addAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactorSession) AddAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.AddAdmin(&_AddressBook.TransactOpts, _admin)
}

// ClearRequest is a paid mutator transaction binding the contract method 0x4f97638f.
//
// Solidity: function clearRequest() returns()
func (_AddressBook *AddressBookTransactor) ClearRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "clearRequest")
}

// ClearRequest is a paid mutator transaction binding the contract method 0x4f97638f.
//
// Solidity: function clearRequest() returns()
func (_AddressBook *AddressBookSession) ClearRequest() (*types.Transaction, error) {
	return _AddressBook.Contract.ClearRequest(&_AddressBook.TransactOpts)
}

// ClearRequest is a paid mutator transaction binding the contract method 0x4f97638f.
//
// Solidity: function clearRequest() returns()
func (_AddressBook *AddressBookTransactorSession) ClearRequest() (*types.Transaction, error) {
	return _AddressBook.Contract.ClearRequest(&_AddressBook.TransactOpts)
}

// ConstructContract is a paid mutator transaction binding the contract method 0x7894c366.
//
// Solidity: function constructContract(_adminList address[], _requirement uint256) returns()
func (_AddressBook *AddressBookTransactor) ConstructContract(opts *bind.TransactOpts, _adminList []common.Address, _requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "constructContract", _adminList, _requirement)
}

// ConstructContract is a paid mutator transaction binding the contract method 0x7894c366.
//
// Solidity: function constructContract(_adminList address[], _requirement uint256) returns()
func (_AddressBook *AddressBookSession) ConstructContract(_adminList []common.Address, _requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.ConstructContract(&_AddressBook.TransactOpts, _adminList, _requirement)
}

// ConstructContract is a paid mutator transaction binding the contract method 0x7894c366.
//
// Solidity: function constructContract(_adminList address[], _requirement uint256) returns()
func (_AddressBook *AddressBookTransactorSession) ConstructContract(_adminList []common.Address, _requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.ConstructContract(&_AddressBook.TransactOpts, _adminList, _requirement)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x27e1f7df.
//
// Solidity: function deleteAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactor) DeleteAdmin(opts *bind.TransactOpts, _admin common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "deleteAdmin", _admin)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x27e1f7df.
//
// Solidity: function deleteAdmin(_admin address) returns()
func (_AddressBook *AddressBookSession) DeleteAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.DeleteAdmin(&_AddressBook.TransactOpts, _admin)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x27e1f7df.
//
// Solidity: function deleteAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactorSession) DeleteAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.DeleteAdmin(&_AddressBook.TransactOpts, _admin)
}

// RegisterCnStakingContract is a paid mutator transaction binding the contract method 0x298b3c61.
//
// Solidity: function registerCnStakingContract(_cnNodeId address, _cnStakingContractAddress address, _cnRewardAddress address) returns()
func (_AddressBook *AddressBookTransactor) RegisterCnStakingContract(opts *bind.TransactOpts, _cnNodeId common.Address, _cnStakingContractAddress common.Address, _cnRewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "registerCnStakingContract", _cnNodeId, _cnStakingContractAddress, _cnRewardAddress)
}

// RegisterCnStakingContract is a paid mutator transaction binding the contract method 0x298b3c61.
//
// Solidity: function registerCnStakingContract(_cnNodeId address, _cnStakingContractAddress address, _cnRewardAddress address) returns()
func (_AddressBook *AddressBookSession) RegisterCnStakingContract(_cnNodeId common.Address, _cnStakingContractAddress common.Address, _cnRewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.RegisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId, _cnStakingContractAddress, _cnRewardAddress)
}

// RegisterCnStakingContract is a paid mutator transaction binding the contract method 0x298b3c61.
//
// Solidity: function registerCnStakingContract(_cnNodeId address, _cnStakingContractAddress address, _cnRewardAddress address) returns()
func (_AddressBook *AddressBookTransactorSession) RegisterCnStakingContract(_cnNodeId common.Address, _cnStakingContractAddress common.Address, _cnRewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.RegisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId, _cnStakingContractAddress, _cnRewardAddress)
}

// ReviseRewardAddress is a paid mutator transaction binding the contract method 0x832a2aad.
//
// Solidity: function reviseRewardAddress(_rewardAddress address) returns()
func (_AddressBook *AddressBookTransactor) ReviseRewardAddress(opts *bind.TransactOpts, _rewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "reviseRewardAddress", _rewardAddress)
}

// ReviseRewardAddress is a paid mutator transaction binding the contract method 0x832a2aad.
//
// Solidity: function reviseRewardAddress(_rewardAddress address) returns()
func (_AddressBook *AddressBookSession) ReviseRewardAddress(_rewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.ReviseRewardAddress(&_AddressBook.TransactOpts, _rewardAddress)
}

// ReviseRewardAddress is a paid mutator transaction binding the contract method 0x832a2aad.
//
// Solidity: function reviseRewardAddress(_rewardAddress address) returns()
func (_AddressBook *AddressBookTransactorSession) ReviseRewardAddress(_rewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.ReviseRewardAddress(&_AddressBook.TransactOpts, _rewardAddress)
}

// RevokeRequest is a paid mutator transaction binding the contract method 0x3f0628b1.
//
// Solidity: function revokeRequest(_functionId uint8, _firstArg bytes32, _secondArg bytes32, _thirdArg bytes32) returns()
func (_AddressBook *AddressBookTransactor) RevokeRequest(opts *bind.TransactOpts, _functionId uint8, _firstArg [32]byte, _secondArg [32]byte, _thirdArg [32]byte) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "revokeRequest", _functionId, _firstArg, _secondArg, _thirdArg)
}

// RevokeRequest is a paid mutator transaction binding the contract method 0x3f0628b1.
//
// Solidity: function revokeRequest(_functionId uint8, _firstArg bytes32, _secondArg bytes32, _thirdArg bytes32) returns()
func (_AddressBook *AddressBookSession) RevokeRequest(_functionId uint8, _firstArg [32]byte, _secondArg [32]byte, _thirdArg [32]byte) (*types.Transaction, error) {
	return _AddressBook.Contract.RevokeRequest(&_AddressBook.TransactOpts, _functionId, _firstArg, _secondArg, _thirdArg)
}

// RevokeRequest is a paid mutator transaction binding the contract method 0x3f0628b1.
//
// Solidity: function revokeRequest(_functionId uint8, _firstArg bytes32, _secondArg bytes32, _thirdArg bytes32) returns()
func (_AddressBook *AddressBookTransactorSession) RevokeRequest(_functionId uint8, _firstArg [32]byte, _secondArg [32]byte, _thirdArg [32]byte) (*types.Transaction, error) {
	return _AddressBook.Contract.RevokeRequest(&_AddressBook.TransactOpts, _functionId, _firstArg, _secondArg, _thirdArg)
}

// SubmitActivateAddressBook is a paid mutator transaction binding the contract method 0xfeb15ca1.
//
// Solidity: function submitActivateAddressBook() returns()
func (_AddressBook *AddressBookTransactor) SubmitActivateAddressBook(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitActivateAddressBook")
}

// SubmitActivateAddressBook is a paid mutator transaction binding the contract method 0xfeb15ca1.
//
// Solidity: function submitActivateAddressBook() returns()
func (_AddressBook *AddressBookSession) SubmitActivateAddressBook() (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitActivateAddressBook(&_AddressBook.TransactOpts)
}

// SubmitActivateAddressBook is a paid mutator transaction binding the contract method 0xfeb15ca1.
//
// Solidity: function submitActivateAddressBook() returns()
func (_AddressBook *AddressBookTransactorSession) SubmitActivateAddressBook() (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitActivateAddressBook(&_AddressBook.TransactOpts)
}

// SubmitAddAdmin is a paid mutator transaction binding the contract method 0x863f5c0a.
//
// Solidity: function submitAddAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactor) SubmitAddAdmin(opts *bind.TransactOpts, _admin common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitAddAdmin", _admin)
}

// SubmitAddAdmin is a paid mutator transaction binding the contract method 0x863f5c0a.
//
// Solidity: function submitAddAdmin(_admin address) returns()
func (_AddressBook *AddressBookSession) SubmitAddAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitAddAdmin(&_AddressBook.TransactOpts, _admin)
}

// SubmitAddAdmin is a paid mutator transaction binding the contract method 0x863f5c0a.
//
// Solidity: function submitAddAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitAddAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitAddAdmin(&_AddressBook.TransactOpts, _admin)
}

// SubmitClearRequest is a paid mutator transaction binding the contract method 0x87cd9feb.
//
// Solidity: function submitClearRequest() returns()
func (_AddressBook *AddressBookTransactor) SubmitClearRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitClearRequest")
}

// SubmitClearRequest is a paid mutator transaction binding the contract method 0x87cd9feb.
//
// Solidity: function submitClearRequest() returns()
func (_AddressBook *AddressBookSession) SubmitClearRequest() (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitClearRequest(&_AddressBook.TransactOpts)
}

// SubmitClearRequest is a paid mutator transaction binding the contract method 0x87cd9feb.
//
// Solidity: function submitClearRequest() returns()
func (_AddressBook *AddressBookTransactorSession) SubmitClearRequest() (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitClearRequest(&_AddressBook.TransactOpts)
}

// SubmitDeleteAdmin is a paid mutator transaction binding the contract method 0x791b5123.
//
// Solidity: function submitDeleteAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactor) SubmitDeleteAdmin(opts *bind.TransactOpts, _admin common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitDeleteAdmin", _admin)
}

// SubmitDeleteAdmin is a paid mutator transaction binding the contract method 0x791b5123.
//
// Solidity: function submitDeleteAdmin(_admin address) returns()
func (_AddressBook *AddressBookSession) SubmitDeleteAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitDeleteAdmin(&_AddressBook.TransactOpts, _admin)
}

// SubmitDeleteAdmin is a paid mutator transaction binding the contract method 0x791b5123.
//
// Solidity: function submitDeleteAdmin(_admin address) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitDeleteAdmin(_admin common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitDeleteAdmin(&_AddressBook.TransactOpts, _admin)
}

// SubmitRegisterCnStakingContract is a paid mutator transaction binding the contract method 0xcc11efc0.
//
// Solidity: function submitRegisterCnStakingContract(_cnNodeId address, _cnStakingContractAddress address, _cnRewardAddress address) returns()
func (_AddressBook *AddressBookTransactor) SubmitRegisterCnStakingContract(opts *bind.TransactOpts, _cnNodeId common.Address, _cnStakingContractAddress common.Address, _cnRewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitRegisterCnStakingContract", _cnNodeId, _cnStakingContractAddress, _cnRewardAddress)
}

// SubmitRegisterCnStakingContract is a paid mutator transaction binding the contract method 0xcc11efc0.
//
// Solidity: function submitRegisterCnStakingContract(_cnNodeId address, _cnStakingContractAddress address, _cnRewardAddress address) returns()
func (_AddressBook *AddressBookSession) SubmitRegisterCnStakingContract(_cnNodeId common.Address, _cnStakingContractAddress common.Address, _cnRewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitRegisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId, _cnStakingContractAddress, _cnRewardAddress)
}

// SubmitRegisterCnStakingContract is a paid mutator transaction binding the contract method 0xcc11efc0.
//
// Solidity: function submitRegisterCnStakingContract(_cnNodeId address, _cnStakingContractAddress address, _cnRewardAddress address) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitRegisterCnStakingContract(_cnNodeId common.Address, _cnStakingContractAddress common.Address, _cnRewardAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitRegisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId, _cnStakingContractAddress, _cnRewardAddress)
}

// SubmitUnregisterCnStakingContract is a paid mutator transaction binding the contract method 0xb5067706.
//
// Solidity: function submitUnregisterCnStakingContract(_cnNodeId address) returns()
func (_AddressBook *AddressBookTransactor) SubmitUnregisterCnStakingContract(opts *bind.TransactOpts, _cnNodeId common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitUnregisterCnStakingContract", _cnNodeId)
}

// SubmitUnregisterCnStakingContract is a paid mutator transaction binding the contract method 0xb5067706.
//
// Solidity: function submitUnregisterCnStakingContract(_cnNodeId address) returns()
func (_AddressBook *AddressBookSession) SubmitUnregisterCnStakingContract(_cnNodeId common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUnregisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId)
}

// SubmitUnregisterCnStakingContract is a paid mutator transaction binding the contract method 0xb5067706.
//
// Solidity: function submitUnregisterCnStakingContract(_cnNodeId address) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitUnregisterCnStakingContract(_cnNodeId common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUnregisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId)
}

// SubmitUpdateKirContract is a paid mutator transaction binding the contract method 0x9258d768.
//
// Solidity: function submitUpdateKirContract(_kirContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactor) SubmitUpdateKirContract(opts *bind.TransactOpts, _kirContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitUpdateKirContract", _kirContractAddress, _version)
}

// SubmitUpdateKirContract is a paid mutator transaction binding the contract method 0x9258d768.
//
// Solidity: function submitUpdateKirContract(_kirContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookSession) SubmitUpdateKirContract(_kirContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdateKirContract(&_AddressBook.TransactOpts, _kirContractAddress, _version)
}

// SubmitUpdateKirContract is a paid mutator transaction binding the contract method 0x9258d768.
//
// Solidity: function submitUpdateKirContract(_kirContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitUpdateKirContract(_kirContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdateKirContract(&_AddressBook.TransactOpts, _kirContractAddress, _version)
}

// SubmitUpdatePocContract is a paid mutator transaction binding the contract method 0x21ac4ad4.
//
// Solidity: function submitUpdatePocContract(_pocContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactor) SubmitUpdatePocContract(opts *bind.TransactOpts, _pocContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitUpdatePocContract", _pocContractAddress, _version)
}

// SubmitUpdatePocContract is a paid mutator transaction binding the contract method 0x21ac4ad4.
//
// Solidity: function submitUpdatePocContract(_pocContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookSession) SubmitUpdatePocContract(_pocContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdatePocContract(&_AddressBook.TransactOpts, _pocContractAddress, _version)
}

// SubmitUpdatePocContract is a paid mutator transaction binding the contract method 0x21ac4ad4.
//
// Solidity: function submitUpdatePocContract(_pocContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitUpdatePocContract(_pocContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdatePocContract(&_AddressBook.TransactOpts, _pocContractAddress, _version)
}

// SubmitUpdateRequirement is a paid mutator transaction binding the contract method 0xe748357b.
//
// Solidity: function submitUpdateRequirement(_requirement uint256) returns()
func (_AddressBook *AddressBookTransactor) SubmitUpdateRequirement(opts *bind.TransactOpts, _requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitUpdateRequirement", _requirement)
}

// SubmitUpdateRequirement is a paid mutator transaction binding the contract method 0xe748357b.
//
// Solidity: function submitUpdateRequirement(_requirement uint256) returns()
func (_AddressBook *AddressBookSession) SubmitUpdateRequirement(_requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdateRequirement(&_AddressBook.TransactOpts, _requirement)
}

// SubmitUpdateRequirement is a paid mutator transaction binding the contract method 0xe748357b.
//
// Solidity: function submitUpdateRequirement(_requirement uint256) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitUpdateRequirement(_requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdateRequirement(&_AddressBook.TransactOpts, _requirement)
}

// SubmitUpdateSpareContract is a paid mutator transaction binding the contract method 0x394a144a.
//
// Solidity: function submitUpdateSpareContract(_spareContractAddress address) returns()
func (_AddressBook *AddressBookTransactor) SubmitUpdateSpareContract(opts *bind.TransactOpts, _spareContractAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "submitUpdateSpareContract", _spareContractAddress)
}

// SubmitUpdateSpareContract is a paid mutator transaction binding the contract method 0x394a144a.
//
// Solidity: function submitUpdateSpareContract(_spareContractAddress address) returns()
func (_AddressBook *AddressBookSession) SubmitUpdateSpareContract(_spareContractAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdateSpareContract(&_AddressBook.TransactOpts, _spareContractAddress)
}

// SubmitUpdateSpareContract is a paid mutator transaction binding the contract method 0x394a144a.
//
// Solidity: function submitUpdateSpareContract(_spareContractAddress address) returns()
func (_AddressBook *AddressBookTransactorSession) SubmitUpdateSpareContract(_spareContractAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.SubmitUpdateSpareContract(&_AddressBook.TransactOpts, _spareContractAddress)
}

// UnregisterCnStakingContract is a paid mutator transaction binding the contract method 0x579740db.
//
// Solidity: function unregisterCnStakingContract(_cnNodeId address) returns()
func (_AddressBook *AddressBookTransactor) UnregisterCnStakingContract(opts *bind.TransactOpts, _cnNodeId common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "unregisterCnStakingContract", _cnNodeId)
}

// UnregisterCnStakingContract is a paid mutator transaction binding the contract method 0x579740db.
//
// Solidity: function unregisterCnStakingContract(_cnNodeId address) returns()
func (_AddressBook *AddressBookSession) UnregisterCnStakingContract(_cnNodeId common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.UnregisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId)
}

// UnregisterCnStakingContract is a paid mutator transaction binding the contract method 0x579740db.
//
// Solidity: function unregisterCnStakingContract(_cnNodeId address) returns()
func (_AddressBook *AddressBookTransactorSession) UnregisterCnStakingContract(_cnNodeId common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.UnregisterCnStakingContract(&_AddressBook.TransactOpts, _cnNodeId)
}

// UpdateKirContract is a paid mutator transaction binding the contract method 0x4c5d435c.
//
// Solidity: function updateKirContract(_kirContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactor) UpdateKirContract(opts *bind.TransactOpts, _kirContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "updateKirContract", _kirContractAddress, _version)
}

// UpdateKirContract is a paid mutator transaction binding the contract method 0x4c5d435c.
//
// Solidity: function updateKirContract(_kirContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookSession) UpdateKirContract(_kirContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdateKirContract(&_AddressBook.TransactOpts, _kirContractAddress, _version)
}

// UpdateKirContract is a paid mutator transaction binding the contract method 0x4c5d435c.
//
// Solidity: function updateKirContract(_kirContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactorSession) UpdateKirContract(_kirContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdateKirContract(&_AddressBook.TransactOpts, _kirContractAddress, _version)
}

// UpdatePocContract is a paid mutator transaction binding the contract method 0xc7e9de75.
//
// Solidity: function updatePocContract(_pocContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactor) UpdatePocContract(opts *bind.TransactOpts, _pocContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "updatePocContract", _pocContractAddress, _version)
}

// UpdatePocContract is a paid mutator transaction binding the contract method 0xc7e9de75.
//
// Solidity: function updatePocContract(_pocContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookSession) UpdatePocContract(_pocContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdatePocContract(&_AddressBook.TransactOpts, _pocContractAddress, _version)
}

// UpdatePocContract is a paid mutator transaction binding the contract method 0xc7e9de75.
//
// Solidity: function updatePocContract(_pocContractAddress address, _version uint256) returns()
func (_AddressBook *AddressBookTransactorSession) UpdatePocContract(_pocContractAddress common.Address, _version *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdatePocContract(&_AddressBook.TransactOpts, _pocContractAddress, _version)
}

// UpdateRequirement is a paid mutator transaction binding the contract method 0xc47afb3a.
//
// Solidity: function updateRequirement(_requirement uint256) returns()
func (_AddressBook *AddressBookTransactor) UpdateRequirement(opts *bind.TransactOpts, _requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "updateRequirement", _requirement)
}

// UpdateRequirement is a paid mutator transaction binding the contract method 0xc47afb3a.
//
// Solidity: function updateRequirement(_requirement uint256) returns()
func (_AddressBook *AddressBookSession) UpdateRequirement(_requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdateRequirement(&_AddressBook.TransactOpts, _requirement)
}

// UpdateRequirement is a paid mutator transaction binding the contract method 0xc47afb3a.
//
// Solidity: function updateRequirement(_requirement uint256) returns()
func (_AddressBook *AddressBookTransactorSession) UpdateRequirement(_requirement *big.Int) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdateRequirement(&_AddressBook.TransactOpts, _requirement)
}

// UpdateSpareContract is a paid mutator transaction binding the contract method 0xafaaf330.
//
// Solidity: function updateSpareContract(_spareContractAddress address) returns()
func (_AddressBook *AddressBookTransactor) UpdateSpareContract(opts *bind.TransactOpts, _spareContractAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.contract.Transact(opts, "updateSpareContract", _spareContractAddress)
}

// UpdateSpareContract is a paid mutator transaction binding the contract method 0xafaaf330.
//
// Solidity: function updateSpareContract(_spareContractAddress address) returns()
func (_AddressBook *AddressBookSession) UpdateSpareContract(_spareContractAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdateSpareContract(&_AddressBook.TransactOpts, _spareContractAddress)
}

// UpdateSpareContract is a paid mutator transaction binding the contract method 0xafaaf330.
//
// Solidity: function updateSpareContract(_spareContractAddress address) returns()
func (_AddressBook *AddressBookTransactorSession) UpdateSpareContract(_spareContractAddress common.Address) (*types.Transaction, error) {
	return _AddressBook.Contract.UpdateSpareContract(&_AddressBook.TransactOpts, _spareContractAddress)
}

// AddressBookActivateAddressBookIterator is returned from FilterActivateAddressBook and is used to iterate over the raw logs and unpacked data for ActivateAddressBook events raised by the AddressBook contract.
type AddressBookActivateAddressBookIterator struct {
	Event *AddressBookActivateAddressBook // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookActivateAddressBookIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookActivateAddressBook)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookActivateAddressBook)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookActivateAddressBookIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookActivateAddressBookIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookActivateAddressBook represents a ActivateAddressBook event raised by the AddressBook contract.
type AddressBookActivateAddressBook struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterActivateAddressBook is a free log retrieval operation binding the contract event 0x29d89931226d613bf878a0be8c635eaf2049121c8c68d5ad80a78f0ac9005d4b.
//
// Solidity: e ActivateAddressBook()
func (_AddressBook *AddressBookFilterer) FilterActivateAddressBook(opts *bind.FilterOpts) (*AddressBookActivateAddressBookIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "ActivateAddressBook")
	if err != nil {
		return nil, err
	}
	return &AddressBookActivateAddressBookIterator{contract: _AddressBook.contract, event: "ActivateAddressBook", logs: logs, sub: sub}, nil
}

// WatchActivateAddressBook is a free log subscription operation binding the contract event 0x29d89931226d613bf878a0be8c635eaf2049121c8c68d5ad80a78f0ac9005d4b.
//
// Solidity: e ActivateAddressBook()
func (_AddressBook *AddressBookFilterer) WatchActivateAddressBook(opts *bind.WatchOpts, sink chan<- *AddressBookActivateAddressBook) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "ActivateAddressBook")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookActivateAddressBook)
				if err := _AddressBook.contract.UnpackLog(event, "ActivateAddressBook", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookAddAdminIterator is returned from FilterAddAdmin and is used to iterate over the raw logs and unpacked data for AddAdmin events raised by the AddressBook contract.
type AddressBookAddAdminIterator struct {
	Event *AddressBookAddAdmin // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookAddAdminIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookAddAdmin)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookAddAdmin)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookAddAdminIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookAddAdminIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookAddAdmin represents a AddAdmin event raised by the AddressBook contract.
type AddressBookAddAdmin struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAddAdmin is a free log retrieval operation binding the contract event 0xad6de4452a631e641cb59902236607946ce9272b9b981f2f80e8d129cb9084ba.
//
// Solidity: e AddAdmin(admin indexed address)
func (_AddressBook *AddressBookFilterer) FilterAddAdmin(opts *bind.FilterOpts, admin []common.Address) (*AddressBookAddAdminIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "AddAdmin", adminRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookAddAdminIterator{contract: _AddressBook.contract, event: "AddAdmin", logs: logs, sub: sub}, nil
}

// WatchAddAdmin is a free log subscription operation binding the contract event 0xad6de4452a631e641cb59902236607946ce9272b9b981f2f80e8d129cb9084ba.
//
// Solidity: e AddAdmin(admin indexed address)
func (_AddressBook *AddressBookFilterer) WatchAddAdmin(opts *bind.WatchOpts, sink chan<- *AddressBookAddAdmin, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "AddAdmin", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookAddAdmin)
				if err := _AddressBook.contract.UnpackLog(event, "AddAdmin", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookCancelRequestIterator is returned from FilterCancelRequest and is used to iterate over the raw logs and unpacked data for CancelRequest events raised by the AddressBook contract.
type AddressBookCancelRequestIterator struct {
	Event *AddressBookCancelRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookCancelRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookCancelRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookCancelRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookCancelRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookCancelRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookCancelRequest represents a CancelRequest event raised by the AddressBook contract.
type AddressBookCancelRequest struct {
	Id         [32]byte
	From       common.Address
	FunctionId uint8
	FirstArg   [32]byte
	SecondArg  [32]byte
	ThirdArg   [32]byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterCancelRequest is a free log retrieval operation binding the contract event 0xbfda049a0206fd9c90ed4a3170f5bfaad83c323a16835dd68fea92faa247c2cd.
//
// Solidity: e CancelRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32)
func (_AddressBook *AddressBookFilterer) FilterCancelRequest(opts *bind.FilterOpts, id [][32]byte, from []common.Address) (*AddressBookCancelRequestIterator, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "CancelRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookCancelRequestIterator{contract: _AddressBook.contract, event: "CancelRequest", logs: logs, sub: sub}, nil
}

// WatchCancelRequest is a free log subscription operation binding the contract event 0xbfda049a0206fd9c90ed4a3170f5bfaad83c323a16835dd68fea92faa247c2cd.
//
// Solidity: e CancelRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32)
func (_AddressBook *AddressBookFilterer) WatchCancelRequest(opts *bind.WatchOpts, sink chan<- *AddressBookCancelRequest, id [][32]byte, from []common.Address) (event.Subscription, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "CancelRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookCancelRequest)
				if err := _AddressBook.contract.UnpackLog(event, "CancelRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookClearRequestIterator is returned from FilterClearRequest and is used to iterate over the raw logs and unpacked data for ClearRequest events raised by the AddressBook contract.
type AddressBookClearRequestIterator struct {
	Event *AddressBookClearRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookClearRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookClearRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookClearRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookClearRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookClearRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookClearRequest represents a ClearRequest event raised by the AddressBook contract.
type AddressBookClearRequest struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterClearRequest is a free log retrieval operation binding the contract event 0x907527d30089abd16e30f06ddbbbc18480505176262f19bc16c1fbf9262f9c6b.
//
// Solidity: e ClearRequest()
func (_AddressBook *AddressBookFilterer) FilterClearRequest(opts *bind.FilterOpts) (*AddressBookClearRequestIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "ClearRequest")
	if err != nil {
		return nil, err
	}
	return &AddressBookClearRequestIterator{contract: _AddressBook.contract, event: "ClearRequest", logs: logs, sub: sub}, nil
}

// WatchClearRequest is a free log subscription operation binding the contract event 0x907527d30089abd16e30f06ddbbbc18480505176262f19bc16c1fbf9262f9c6b.
//
// Solidity: e ClearRequest()
func (_AddressBook *AddressBookFilterer) WatchClearRequest(opts *bind.WatchOpts, sink chan<- *AddressBookClearRequest) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "ClearRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookClearRequest)
				if err := _AddressBook.contract.UnpackLog(event, "ClearRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookDeleteAdminIterator is returned from FilterDeleteAdmin and is used to iterate over the raw logs and unpacked data for DeleteAdmin events raised by the AddressBook contract.
type AddressBookDeleteAdminIterator struct {
	Event *AddressBookDeleteAdmin // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookDeleteAdminIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookDeleteAdmin)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookDeleteAdmin)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookDeleteAdminIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookDeleteAdminIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookDeleteAdmin represents a DeleteAdmin event raised by the AddressBook contract.
type AddressBookDeleteAdmin struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterDeleteAdmin is a free log retrieval operation binding the contract event 0x1af6bd3d85a56e7c4a0700756fd2ca3b3b65c266e56c77652c5a346bc2565220.
//
// Solidity: e DeleteAdmin(admin indexed address)
func (_AddressBook *AddressBookFilterer) FilterDeleteAdmin(opts *bind.FilterOpts, admin []common.Address) (*AddressBookDeleteAdminIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "DeleteAdmin", adminRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookDeleteAdminIterator{contract: _AddressBook.contract, event: "DeleteAdmin", logs: logs, sub: sub}, nil
}

// WatchDeleteAdmin is a free log subscription operation binding the contract event 0x1af6bd3d85a56e7c4a0700756fd2ca3b3b65c266e56c77652c5a346bc2565220.
//
// Solidity: e DeleteAdmin(admin indexed address)
func (_AddressBook *AddressBookFilterer) WatchDeleteAdmin(opts *bind.WatchOpts, sink chan<- *AddressBookDeleteAdmin, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "DeleteAdmin", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookDeleteAdmin)
				if err := _AddressBook.contract.UnpackLog(event, "DeleteAdmin", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookDeployContractIterator is returned from FilterDeployContract and is used to iterate over the raw logs and unpacked data for DeployContract events raised by the AddressBook contract.
type AddressBookDeployContractIterator struct {
	Event *AddressBookDeployContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookDeployContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookDeployContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookDeployContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookDeployContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookDeployContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookDeployContract represents a DeployContract event raised by the AddressBook contract.
type AddressBookDeployContract struct {
	ContractType string
	AdminList    []common.Address
	Requirement  *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterDeployContract is a free log retrieval operation binding the contract event 0xc5caa942b8f8ea45a2e094d941dbba0ef9c0307f34c81ce78e71bfb128d6b25a.
//
// Solidity: e DeployContract(contractType string, adminList address[], requirement uint256)
func (_AddressBook *AddressBookFilterer) FilterDeployContract(opts *bind.FilterOpts) (*AddressBookDeployContractIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "DeployContract")
	if err != nil {
		return nil, err
	}
	return &AddressBookDeployContractIterator{contract: _AddressBook.contract, event: "DeployContract", logs: logs, sub: sub}, nil
}

// WatchDeployContract is a free log subscription operation binding the contract event 0xc5caa942b8f8ea45a2e094d941dbba0ef9c0307f34c81ce78e71bfb128d6b25a.
//
// Solidity: e DeployContract(contractType string, adminList address[], requirement uint256)
func (_AddressBook *AddressBookFilterer) WatchDeployContract(opts *bind.WatchOpts, sink chan<- *AddressBookDeployContract) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "DeployContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookDeployContract)
				if err := _AddressBook.contract.UnpackLog(event, "DeployContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookExecuteRequestFailureIterator is returned from FilterExecuteRequestFailure and is used to iterate over the raw logs and unpacked data for ExecuteRequestFailure events raised by the AddressBook contract.
type AddressBookExecuteRequestFailureIterator struct {
	Event *AddressBookExecuteRequestFailure // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookExecuteRequestFailureIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookExecuteRequestFailure)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookExecuteRequestFailure)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookExecuteRequestFailureIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookExecuteRequestFailureIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookExecuteRequestFailure represents a ExecuteRequestFailure event raised by the AddressBook contract.
type AddressBookExecuteRequestFailure struct {
	Id         [32]byte
	From       common.Address
	FunctionId uint8
	FirstArg   [32]byte
	SecondArg  [32]byte
	ThirdArg   [32]byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterExecuteRequestFailure is a free log retrieval operation binding the contract event 0xf151a3ee41626c2511372320f09f7957af81c8c1cde8cdf3f05a5979626eaaf3.
//
// Solidity: e ExecuteRequestFailure(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32)
func (_AddressBook *AddressBookFilterer) FilterExecuteRequestFailure(opts *bind.FilterOpts, id [][32]byte, from []common.Address) (*AddressBookExecuteRequestFailureIterator, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "ExecuteRequestFailure", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookExecuteRequestFailureIterator{contract: _AddressBook.contract, event: "ExecuteRequestFailure", logs: logs, sub: sub}, nil
}

// WatchExecuteRequestFailure is a free log subscription operation binding the contract event 0xf151a3ee41626c2511372320f09f7957af81c8c1cde8cdf3f05a5979626eaaf3.
//
// Solidity: e ExecuteRequestFailure(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32)
func (_AddressBook *AddressBookFilterer) WatchExecuteRequestFailure(opts *bind.WatchOpts, sink chan<- *AddressBookExecuteRequestFailure, id [][32]byte, from []common.Address) (event.Subscription, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "ExecuteRequestFailure", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookExecuteRequestFailure)
				if err := _AddressBook.contract.UnpackLog(event, "ExecuteRequestFailure", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookExecuteRequestSuccessIterator is returned from FilterExecuteRequestSuccess and is used to iterate over the raw logs and unpacked data for ExecuteRequestSuccess events raised by the AddressBook contract.
type AddressBookExecuteRequestSuccessIterator struct {
	Event *AddressBookExecuteRequestSuccess // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookExecuteRequestSuccessIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookExecuteRequestSuccess)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookExecuteRequestSuccess)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookExecuteRequestSuccessIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookExecuteRequestSuccessIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookExecuteRequestSuccess represents a ExecuteRequestSuccess event raised by the AddressBook contract.
type AddressBookExecuteRequestSuccess struct {
	Id         [32]byte
	From       common.Address
	FunctionId uint8
	FirstArg   [32]byte
	SecondArg  [32]byte
	ThirdArg   [32]byte
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterExecuteRequestSuccess is a free log retrieval operation binding the contract event 0xc55c9229184beabeee72b6970a96691b4200919e47579cc4b9be50a1bec7ef11.
//
// Solidity: e ExecuteRequestSuccess(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32)
func (_AddressBook *AddressBookFilterer) FilterExecuteRequestSuccess(opts *bind.FilterOpts, id [][32]byte, from []common.Address) (*AddressBookExecuteRequestSuccessIterator, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "ExecuteRequestSuccess", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookExecuteRequestSuccessIterator{contract: _AddressBook.contract, event: "ExecuteRequestSuccess", logs: logs, sub: sub}, nil
}

// WatchExecuteRequestSuccess is a free log subscription operation binding the contract event 0xc55c9229184beabeee72b6970a96691b4200919e47579cc4b9be50a1bec7ef11.
//
// Solidity: e ExecuteRequestSuccess(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32)
func (_AddressBook *AddressBookFilterer) WatchExecuteRequestSuccess(opts *bind.WatchOpts, sink chan<- *AddressBookExecuteRequestSuccess, id [][32]byte, from []common.Address) (event.Subscription, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "ExecuteRequestSuccess", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookExecuteRequestSuccess)
				if err := _AddressBook.contract.UnpackLog(event, "ExecuteRequestSuccess", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookExpiredRequestIterator is returned from FilterExpiredRequest and is used to iterate over the raw logs and unpacked data for ExpiredRequest events raised by the AddressBook contract.
type AddressBookExpiredRequestIterator struct {
	Event *AddressBookExpiredRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookExpiredRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookExpiredRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookExpiredRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookExpiredRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookExpiredRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookExpiredRequest represents a ExpiredRequest event raised by the AddressBook contract.
type AddressBookExpiredRequest struct {
	Id         [32]byte
	From       common.Address
	FunctionId uint8
	FirstArg   [32]byte
	SecondArg  [32]byte
	ThirdArg   [32]byte
	Confirmers []common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterExpiredRequest is a free log retrieval operation binding the contract event 0x9f3ca7a04988021200a04e0775f46648683bffe7203608269a66c371befe5685.
//
// Solidity: e ExpiredRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32, confirmers address[])
func (_AddressBook *AddressBookFilterer) FilterExpiredRequest(opts *bind.FilterOpts, id [][32]byte, from []common.Address) (*AddressBookExpiredRequestIterator, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "ExpiredRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookExpiredRequestIterator{contract: _AddressBook.contract, event: "ExpiredRequest", logs: logs, sub: sub}, nil
}

// WatchExpiredRequest is a free log subscription operation binding the contract event 0x9f3ca7a04988021200a04e0775f46648683bffe7203608269a66c371befe5685.
//
// Solidity: e ExpiredRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32, confirmers address[])
func (_AddressBook *AddressBookFilterer) WatchExpiredRequest(opts *bind.WatchOpts, sink chan<- *AddressBookExpiredRequest, id [][32]byte, from []common.Address) (event.Subscription, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "ExpiredRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookExpiredRequest)
				if err := _AddressBook.contract.UnpackLog(event, "ExpiredRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookRegisterCnStakingContractIterator is returned from FilterRegisterCnStakingContract and is used to iterate over the raw logs and unpacked data for RegisterCnStakingContract events raised by the AddressBook contract.
type AddressBookRegisterCnStakingContractIterator struct {
	Event *AddressBookRegisterCnStakingContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookRegisterCnStakingContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookRegisterCnStakingContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookRegisterCnStakingContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookRegisterCnStakingContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookRegisterCnStakingContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookRegisterCnStakingContract represents a RegisterCnStakingContract event raised by the AddressBook contract.
type AddressBookRegisterCnStakingContract struct {
	CnNodeId                 common.Address
	CnStakingContractAddress common.Address
	CnRewardAddress          common.Address
	Raw                      types.Log // Blockchain specific contextual infos
}

// FilterRegisterCnStakingContract is a free log retrieval operation binding the contract event 0xe01726557c1ea9f7286dca4bba890e96fea9041689db298806306cafa74c9e91.
//
// Solidity: e RegisterCnStakingContract(cnNodeId address, cnStakingContractAddress address, cnRewardAddress address)
func (_AddressBook *AddressBookFilterer) FilterRegisterCnStakingContract(opts *bind.FilterOpts) (*AddressBookRegisterCnStakingContractIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "RegisterCnStakingContract")
	if err != nil {
		return nil, err
	}
	return &AddressBookRegisterCnStakingContractIterator{contract: _AddressBook.contract, event: "RegisterCnStakingContract", logs: logs, sub: sub}, nil
}

// WatchRegisterCnStakingContract is a free log subscription operation binding the contract event 0xe01726557c1ea9f7286dca4bba890e96fea9041689db298806306cafa74c9e91.
//
// Solidity: e RegisterCnStakingContract(cnNodeId address, cnStakingContractAddress address, cnRewardAddress address)
func (_AddressBook *AddressBookFilterer) WatchRegisterCnStakingContract(opts *bind.WatchOpts, sink chan<- *AddressBookRegisterCnStakingContract) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "RegisterCnStakingContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookRegisterCnStakingContract)
				if err := _AddressBook.contract.UnpackLog(event, "RegisterCnStakingContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookReviseRewardAddressIterator is returned from FilterReviseRewardAddress and is used to iterate over the raw logs and unpacked data for ReviseRewardAddress events raised by the AddressBook contract.
type AddressBookReviseRewardAddressIterator struct {
	Event *AddressBookReviseRewardAddress // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookReviseRewardAddressIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookReviseRewardAddress)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookReviseRewardAddress)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookReviseRewardAddressIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookReviseRewardAddressIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookReviseRewardAddress represents a ReviseRewardAddress event raised by the AddressBook contract.
type AddressBookReviseRewardAddress struct {
	CnNodeId          common.Address
	PrevRewardAddress common.Address
	CurRewardAddress  common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterReviseRewardAddress is a free log retrieval operation binding the contract event 0xaa5c92ffd739bc0b8b117b671e7d713917ddb1440b436263a3ea106d70c6f05f.
//
// Solidity: e ReviseRewardAddress(cnNodeId address, prevRewardAddress address, curRewardAddress address)
func (_AddressBook *AddressBookFilterer) FilterReviseRewardAddress(opts *bind.FilterOpts) (*AddressBookReviseRewardAddressIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "ReviseRewardAddress")
	if err != nil {
		return nil, err
	}
	return &AddressBookReviseRewardAddressIterator{contract: _AddressBook.contract, event: "ReviseRewardAddress", logs: logs, sub: sub}, nil
}

// WatchReviseRewardAddress is a free log subscription operation binding the contract event 0xaa5c92ffd739bc0b8b117b671e7d713917ddb1440b436263a3ea106d70c6f05f.
//
// Solidity: e ReviseRewardAddress(cnNodeId address, prevRewardAddress address, curRewardAddress address)
func (_AddressBook *AddressBookFilterer) WatchReviseRewardAddress(opts *bind.WatchOpts, sink chan<- *AddressBookReviseRewardAddress) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "ReviseRewardAddress")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookReviseRewardAddress)
				if err := _AddressBook.contract.UnpackLog(event, "ReviseRewardAddress", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookRevokeRequestIterator is returned from FilterRevokeRequest and is used to iterate over the raw logs and unpacked data for RevokeRequest events raised by the AddressBook contract.
type AddressBookRevokeRequestIterator struct {
	Event *AddressBookRevokeRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookRevokeRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookRevokeRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookRevokeRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookRevokeRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookRevokeRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookRevokeRequest represents a RevokeRequest event raised by the AddressBook contract.
type AddressBookRevokeRequest struct {
	Id         [32]byte
	From       common.Address
	FunctionId uint8
	FirstArg   [32]byte
	SecondArg  [32]byte
	ThirdArg   [32]byte
	Confirmers []common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterRevokeRequest is a free log retrieval operation binding the contract event 0x9c174b2536ba49e3478ca649dac74d9e9f71f70adf70f193e780eabbfcdc367c.
//
// Solidity: e RevokeRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32, confirmers address[])
func (_AddressBook *AddressBookFilterer) FilterRevokeRequest(opts *bind.FilterOpts, id [][32]byte, from []common.Address) (*AddressBookRevokeRequestIterator, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "RevokeRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookRevokeRequestIterator{contract: _AddressBook.contract, event: "RevokeRequest", logs: logs, sub: sub}, nil
}

// WatchRevokeRequest is a free log subscription operation binding the contract event 0x9c174b2536ba49e3478ca649dac74d9e9f71f70adf70f193e780eabbfcdc367c.
//
// Solidity: e RevokeRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32, confirmers address[])
func (_AddressBook *AddressBookFilterer) WatchRevokeRequest(opts *bind.WatchOpts, sink chan<- *AddressBookRevokeRequest, id [][32]byte, from []common.Address) (event.Subscription, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "RevokeRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookRevokeRequest)
				if err := _AddressBook.contract.UnpackLog(event, "RevokeRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookSubmitRequestIterator is returned from FilterSubmitRequest and is used to iterate over the raw logs and unpacked data for SubmitRequest events raised by the AddressBook contract.
type AddressBookSubmitRequestIterator struct {
	Event *AddressBookSubmitRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookSubmitRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookSubmitRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookSubmitRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookSubmitRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookSubmitRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookSubmitRequest represents a SubmitRequest event raised by the AddressBook contract.
type AddressBookSubmitRequest struct {
	Id         [32]byte
	From       common.Address
	FunctionId uint8
	FirstArg   [32]byte
	SecondArg  [32]byte
	ThirdArg   [32]byte
	Confirmers []common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterSubmitRequest is a free log retrieval operation binding the contract event 0xb7b03afe355fcf2b1d00e020db2b1a902b9ee1b1c1d995626c1e18c957340ea8.
//
// Solidity: e SubmitRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32, confirmers address[])
func (_AddressBook *AddressBookFilterer) FilterSubmitRequest(opts *bind.FilterOpts, id [][32]byte, from []common.Address) (*AddressBookSubmitRequestIterator, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "SubmitRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &AddressBookSubmitRequestIterator{contract: _AddressBook.contract, event: "SubmitRequest", logs: logs, sub: sub}, nil
}

// WatchSubmitRequest is a free log subscription operation binding the contract event 0xb7b03afe355fcf2b1d00e020db2b1a902b9ee1b1c1d995626c1e18c957340ea8.
//
// Solidity: e SubmitRequest(id indexed bytes32, from indexed address, functionId uint8, firstArg bytes32, secondArg bytes32, thirdArg bytes32, confirmers address[])
func (_AddressBook *AddressBookFilterer) WatchSubmitRequest(opts *bind.WatchOpts, sink chan<- *AddressBookSubmitRequest, id [][32]byte, from []common.Address) (event.Subscription, error) {

	var idRule []interface{}
	for _, idItem := range id {
		idRule = append(idRule, idItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "SubmitRequest", idRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookSubmitRequest)
				if err := _AddressBook.contract.UnpackLog(event, "SubmitRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookUnregisterCnStakingContractIterator is returned from FilterUnregisterCnStakingContract and is used to iterate over the raw logs and unpacked data for UnregisterCnStakingContract events raised by the AddressBook contract.
type AddressBookUnregisterCnStakingContractIterator struct {
	Event *AddressBookUnregisterCnStakingContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookUnregisterCnStakingContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookUnregisterCnStakingContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookUnregisterCnStakingContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookUnregisterCnStakingContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookUnregisterCnStakingContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookUnregisterCnStakingContract represents a UnregisterCnStakingContract event raised by the AddressBook contract.
type AddressBookUnregisterCnStakingContract struct {
	CnNodeId common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterUnregisterCnStakingContract is a free log retrieval operation binding the contract event 0xa30079721e55931e89e7cdb421712ad0fcc817e7cac8fe954aa7ed0d46b9c42d.
//
// Solidity: e UnregisterCnStakingContract(cnNodeId address)
func (_AddressBook *AddressBookFilterer) FilterUnregisterCnStakingContract(opts *bind.FilterOpts) (*AddressBookUnregisterCnStakingContractIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "UnregisterCnStakingContract")
	if err != nil {
		return nil, err
	}
	return &AddressBookUnregisterCnStakingContractIterator{contract: _AddressBook.contract, event: "UnregisterCnStakingContract", logs: logs, sub: sub}, nil
}

// WatchUnregisterCnStakingContract is a free log subscription operation binding the contract event 0xa30079721e55931e89e7cdb421712ad0fcc817e7cac8fe954aa7ed0d46b9c42d.
//
// Solidity: e UnregisterCnStakingContract(cnNodeId address)
func (_AddressBook *AddressBookFilterer) WatchUnregisterCnStakingContract(opts *bind.WatchOpts, sink chan<- *AddressBookUnregisterCnStakingContract) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "UnregisterCnStakingContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookUnregisterCnStakingContract)
				if err := _AddressBook.contract.UnpackLog(event, "UnregisterCnStakingContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookUpdateKirContractIterator is returned from FilterUpdateKirContract and is used to iterate over the raw logs and unpacked data for UpdateKirContract events raised by the AddressBook contract.
type AddressBookUpdateKirContractIterator struct {
	Event *AddressBookUpdateKirContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookUpdateKirContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookUpdateKirContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookUpdateKirContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookUpdateKirContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookUpdateKirContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookUpdateKirContract represents a UpdateKirContract event raised by the AddressBook contract.
type AddressBookUpdateKirContract struct {
	PrevKirContractAddress common.Address
	PrevVersion            *big.Int
	CurKirContractAddress  common.Address
	CurVersion             *big.Int
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterUpdateKirContract is a free log retrieval operation binding the contract event 0xfdccdf242038c2d09605009fbb95e03f75cdbd106d0a9e52a1670be9553c8848.
//
// Solidity: e UpdateKirContract(prevKirContractAddress address, prevVersion uint256, curKirContractAddress address, curVersion uint256)
func (_AddressBook *AddressBookFilterer) FilterUpdateKirContract(opts *bind.FilterOpts) (*AddressBookUpdateKirContractIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "UpdateKirContract")
	if err != nil {
		return nil, err
	}
	return &AddressBookUpdateKirContractIterator{contract: _AddressBook.contract, event: "UpdateKirContract", logs: logs, sub: sub}, nil
}

// WatchUpdateKirContract is a free log subscription operation binding the contract event 0xfdccdf242038c2d09605009fbb95e03f75cdbd106d0a9e52a1670be9553c8848.
//
// Solidity: e UpdateKirContract(prevKirContractAddress address, prevVersion uint256, curKirContractAddress address, curVersion uint256)
func (_AddressBook *AddressBookFilterer) WatchUpdateKirContract(opts *bind.WatchOpts, sink chan<- *AddressBookUpdateKirContract) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "UpdateKirContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookUpdateKirContract)
				if err := _AddressBook.contract.UnpackLog(event, "UpdateKirContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookUpdatePocContractIterator is returned from FilterUpdatePocContract and is used to iterate over the raw logs and unpacked data for UpdatePocContract events raised by the AddressBook contract.
type AddressBookUpdatePocContractIterator struct {
	Event *AddressBookUpdatePocContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookUpdatePocContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookUpdatePocContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookUpdatePocContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookUpdatePocContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookUpdatePocContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookUpdatePocContract represents a UpdatePocContract event raised by the AddressBook contract.
type AddressBookUpdatePocContract struct {
	PrevPocContractAddress common.Address
	PrevVersion            *big.Int
	CurPocContractAddress  common.Address
	CurVersion             *big.Int
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterUpdatePocContract is a free log retrieval operation binding the contract event 0xd531725ac89042f190fd73adfdeff435e07500f1a92b4b87743f1bcf91acb3a7.
//
// Solidity: e UpdatePocContract(prevPocContractAddress address, prevVersion uint256, curPocContractAddress address, curVersion uint256)
func (_AddressBook *AddressBookFilterer) FilterUpdatePocContract(opts *bind.FilterOpts) (*AddressBookUpdatePocContractIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "UpdatePocContract")
	if err != nil {
		return nil, err
	}
	return &AddressBookUpdatePocContractIterator{contract: _AddressBook.contract, event: "UpdatePocContract", logs: logs, sub: sub}, nil
}

// WatchUpdatePocContract is a free log subscription operation binding the contract event 0xd531725ac89042f190fd73adfdeff435e07500f1a92b4b87743f1bcf91acb3a7.
//
// Solidity: e UpdatePocContract(prevPocContractAddress address, prevVersion uint256, curPocContractAddress address, curVersion uint256)
func (_AddressBook *AddressBookFilterer) WatchUpdatePocContract(opts *bind.WatchOpts, sink chan<- *AddressBookUpdatePocContract) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "UpdatePocContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookUpdatePocContract)
				if err := _AddressBook.contract.UnpackLog(event, "UpdatePocContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookUpdateRequirementIterator is returned from FilterUpdateRequirement and is used to iterate over the raw logs and unpacked data for UpdateRequirement events raised by the AddressBook contract.
type AddressBookUpdateRequirementIterator struct {
	Event *AddressBookUpdateRequirement // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookUpdateRequirementIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookUpdateRequirement)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookUpdateRequirement)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookUpdateRequirementIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookUpdateRequirementIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookUpdateRequirement represents a UpdateRequirement event raised by the AddressBook contract.
type AddressBookUpdateRequirement struct {
	Requirement *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequirement is a free log retrieval operation binding the contract event 0x8951393946c27b45080aad111464c16c70f3d5e7d24b114a627334441961bf5f.
//
// Solidity: e UpdateRequirement(requirement uint256)
func (_AddressBook *AddressBookFilterer) FilterUpdateRequirement(opts *bind.FilterOpts) (*AddressBookUpdateRequirementIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "UpdateRequirement")
	if err != nil {
		return nil, err
	}
	return &AddressBookUpdateRequirementIterator{contract: _AddressBook.contract, event: "UpdateRequirement", logs: logs, sub: sub}, nil
}

// WatchUpdateRequirement is a free log subscription operation binding the contract event 0x8951393946c27b45080aad111464c16c70f3d5e7d24b114a627334441961bf5f.
//
// Solidity: e UpdateRequirement(requirement uint256)
func (_AddressBook *AddressBookFilterer) WatchUpdateRequirement(opts *bind.WatchOpts, sink chan<- *AddressBookUpdateRequirement) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "UpdateRequirement")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookUpdateRequirement)
				if err := _AddressBook.contract.UnpackLog(event, "UpdateRequirement", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// AddressBookUpdateSpareContractIterator is returned from FilterUpdateSpareContract and is used to iterate over the raw logs and unpacked data for UpdateSpareContract events raised by the AddressBook contract.
type AddressBookUpdateSpareContractIterator struct {
	Event *AddressBookUpdateSpareContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log      // Log channel receiving the found contract events
	sub  klaytn.Subscription // Subscription for errors, completion and termination
	done bool                // Whether the subscription completed delivering logs
	fail error               // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AddressBookUpdateSpareContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AddressBookUpdateSpareContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AddressBookUpdateSpareContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AddressBookUpdateSpareContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AddressBookUpdateSpareContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AddressBookUpdateSpareContract represents a UpdateSpareContract event raised by the AddressBook contract.
type AddressBookUpdateSpareContract struct {
	SpareContractAddress common.Address
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterUpdateSpareContract is a free log retrieval operation binding the contract event 0x508aacd44cfe23a34a8c2643ab08c3410cf5505632cfce58dcfa0efa2fd2ff37.
//
// Solidity: e UpdateSpareContract(spareContractAddress address)
func (_AddressBook *AddressBookFilterer) FilterUpdateSpareContract(opts *bind.FilterOpts) (*AddressBookUpdateSpareContractIterator, error) {

	logs, sub, err := _AddressBook.contract.FilterLogs(opts, "UpdateSpareContract")
	if err != nil {
		return nil, err
	}
	return &AddressBookUpdateSpareContractIterator{contract: _AddressBook.contract, event: "UpdateSpareContract", logs: logs, sub: sub}, nil
}

// WatchUpdateSpareContract is a free log subscription operation binding the contract event 0x508aacd44cfe23a34a8c2643ab08c3410cf5505632cfce58dcfa0efa2fd2ff37.
//
// Solidity: e UpdateSpareContract(spareContractAddress address)
func (_AddressBook *AddressBookFilterer) WatchUpdateSpareContract(opts *bind.WatchOpts, sink chan<- *AddressBookUpdateSpareContract) (event.Subscription, error) {

	logs, sub, err := _AddressBook.contract.WatchLogs(opts, "UpdateSpareContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AddressBookUpdateSpareContract)
				if err := _AddressBook.contract.UnpackLog(event, "UpdateSpareContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// CnStakingContractInterfaceABI is the input ABI used to generate the binding from.
const CnStakingContractInterfaceABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"nodeId\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// CnStakingContractInterfaceBinRuntime is the compiled bytecode used for adding genesis block without deploying code.
const CnStakingContractInterfaceBinRuntime = `0x`

// CnStakingContractInterfaceBin is the compiled bytecode used for deploying new contracts.
const CnStakingContractInterfaceBin = `0x`

// DeployCnStakingContractInterface deploys a new Klaytn contract, binding an instance of CnStakingContractInterface to it.
func DeployCnStakingContractInterface(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *CnStakingContractInterface, error) {
	parsed, err := abi.JSON(strings.NewReader(CnStakingContractInterfaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(CnStakingContractInterfaceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &CnStakingContractInterface{CnStakingContractInterfaceCaller: CnStakingContractInterfaceCaller{contract: contract}, CnStakingContractInterfaceTransactor: CnStakingContractInterfaceTransactor{contract: contract}, CnStakingContractInterfaceFilterer: CnStakingContractInterfaceFilterer{contract: contract}}, nil
}

// CnStakingContractInterface is an auto generated Go binding around a Klaytn contract.
type CnStakingContractInterface struct {
	CnStakingContractInterfaceCaller     // Read-only binding to the contract
	CnStakingContractInterfaceTransactor // Write-only binding to the contract
	CnStakingContractInterfaceFilterer   // Log filterer for contract events
}

// CnStakingContractInterfaceCaller is an auto generated read-only Go binding around a Klaytn contract.
type CnStakingContractInterfaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CnStakingContractInterfaceTransactor is an auto generated write-only Go binding around a Klaytn contract.
type CnStakingContractInterfaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CnStakingContractInterfaceFilterer is an auto generated log filtering Go binding around a Klaytn contract events.
type CnStakingContractInterfaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CnStakingContractInterfaceSession is an auto generated Go binding around a Klaytn contract,
// with pre-set call and transact options.
type CnStakingContractInterfaceSession struct {
	Contract     *CnStakingContractInterface // Generic contract binding to set the session for
	CallOpts     bind.CallOpts               // Call options to use throughout this session
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// CnStakingContractInterfaceCallerSession is an auto generated read-only Go binding around a Klaytn contract,
// with pre-set call options.
type CnStakingContractInterfaceCallerSession struct {
	Contract *CnStakingContractInterfaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                     // Call options to use throughout this session
}

// CnStakingContractInterfaceTransactorSession is an auto generated write-only Go binding around a Klaytn contract,
// with pre-set transact options.
type CnStakingContractInterfaceTransactorSession struct {
	Contract     *CnStakingContractInterfaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                     // Transaction auth options to use throughout this session
}

// CnStakingContractInterfaceRaw is an auto generated low-level Go binding around a Klaytn contract.
type CnStakingContractInterfaceRaw struct {
	Contract *CnStakingContractInterface // Generic contract binding to access the raw methods on
}

// CnStakingContractInterfaceCallerRaw is an auto generated low-level read-only Go binding around a Klaytn contract.
type CnStakingContractInterfaceCallerRaw struct {
	Contract *CnStakingContractInterfaceCaller // Generic read-only contract binding to access the raw methods on
}

// CnStakingContractInterfaceTransactorRaw is an auto generated low-level write-only Go binding around a Klaytn contract.
type CnStakingContractInterfaceTransactorRaw struct {
	Contract *CnStakingContractInterfaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCnStakingContractInterface creates a new instance of CnStakingContractInterface, bound to a specific deployed contract.
func NewCnStakingContractInterface(address common.Address, backend bind.ContractBackend) (*CnStakingContractInterface, error) {
	contract, err := bindCnStakingContractInterface(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &CnStakingContractInterface{CnStakingContractInterfaceCaller: CnStakingContractInterfaceCaller{contract: contract}, CnStakingContractInterfaceTransactor: CnStakingContractInterfaceTransactor{contract: contract}, CnStakingContractInterfaceFilterer: CnStakingContractInterfaceFilterer{contract: contract}}, nil
}

// NewCnStakingContractInterfaceCaller creates a new read-only instance of CnStakingContractInterface, bound to a specific deployed contract.
func NewCnStakingContractInterfaceCaller(address common.Address, caller bind.ContractCaller) (*CnStakingContractInterfaceCaller, error) {
	contract, err := bindCnStakingContractInterface(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CnStakingContractInterfaceCaller{contract: contract}, nil
}

// NewCnStakingContractInterfaceTransactor creates a new write-only instance of CnStakingContractInterface, bound to a specific deployed contract.
func NewCnStakingContractInterfaceTransactor(address common.Address, transactor bind.ContractTransactor) (*CnStakingContractInterfaceTransactor, error) {
	contract, err := bindCnStakingContractInterface(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CnStakingContractInterfaceTransactor{contract: contract}, nil
}

// NewCnStakingContractInterfaceFilterer creates a new log filterer instance of CnStakingContractInterface, bound to a specific deployed contract.
func NewCnStakingContractInterfaceFilterer(address common.Address, filterer bind.ContractFilterer) (*CnStakingContractInterfaceFilterer, error) {
	contract, err := bindCnStakingContractInterface(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CnStakingContractInterfaceFilterer{contract: contract}, nil
}

// bindCnStakingContractInterface binds a generic wrapper to an already deployed contract.
func bindCnStakingContractInterface(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CnStakingContractInterfaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CnStakingContractInterface *CnStakingContractInterfaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _CnStakingContractInterface.Contract.CnStakingContractInterfaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CnStakingContractInterface *CnStakingContractInterfaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CnStakingContractInterface.Contract.CnStakingContractInterfaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CnStakingContractInterface *CnStakingContractInterfaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CnStakingContractInterface.Contract.CnStakingContractInterfaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CnStakingContractInterface *CnStakingContractInterfaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _CnStakingContractInterface.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CnStakingContractInterface *CnStakingContractInterfaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CnStakingContractInterface.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CnStakingContractInterface *CnStakingContractInterfaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CnStakingContractInterface.Contract.contract.Transact(opts, method, params...)
}

// IsInitialized is a free data retrieval call binding the contract method 0x392e53cd.
//
// Solidity: function isInitialized() constant returns(bool)
func (_CnStakingContractInterface *CnStakingContractInterfaceCaller) IsInitialized(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _CnStakingContractInterface.contract.Call(opts, out, "isInitialized")
	return *ret0, err
}

// IsInitialized is a free data retrieval call binding the contract method 0x392e53cd.
//
// Solidity: function isInitialized() constant returns(bool)
func (_CnStakingContractInterface *CnStakingContractInterfaceSession) IsInitialized() (bool, error) {
	return _CnStakingContractInterface.Contract.IsInitialized(&_CnStakingContractInterface.CallOpts)
}

// IsInitialized is a free data retrieval call binding the contract method 0x392e53cd.
//
// Solidity: function isInitialized() constant returns(bool)
func (_CnStakingContractInterface *CnStakingContractInterfaceCallerSession) IsInitialized() (bool, error) {
	return _CnStakingContractInterface.Contract.IsInitialized(&_CnStakingContractInterface.CallOpts)
}

// NodeId is a free data retrieval call binding the contract method 0x139d7fed.
//
// Solidity: function nodeId() constant returns(address)
func (_CnStakingContractInterface *CnStakingContractInterfaceCaller) NodeId(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CnStakingContractInterface.contract.Call(opts, out, "nodeId")
	return *ret0, err
}

// NodeId is a free data retrieval call binding the contract method 0x139d7fed.
//
// Solidity: function nodeId() constant returns(address)
func (_CnStakingContractInterface *CnStakingContractInterfaceSession) NodeId() (common.Address, error) {
	return _CnStakingContractInterface.Contract.NodeId(&_CnStakingContractInterface.CallOpts)
}

// NodeId is a free data retrieval call binding the contract method 0x139d7fed.
//
// Solidity: function nodeId() constant returns(address)
func (_CnStakingContractInterface *CnStakingContractInterfaceCallerSession) NodeId() (common.Address, error) {
	return _CnStakingContractInterface.Contract.NodeId(&_CnStakingContractInterface.CallOpts)
}

// RewardAddress is a free data retrieval call binding the contract method 0x8cf57cb9.
//
// Solidity: function rewardAddress() constant returns(address)
func (_CnStakingContractInterface *CnStakingContractInterfaceCaller) RewardAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CnStakingContractInterface.contract.Call(opts, out, "rewardAddress")
	return *ret0, err
}

// RewardAddress is a free data retrieval call binding the contract method 0x8cf57cb9.
//
// Solidity: function rewardAddress() constant returns(address)
func (_CnStakingContractInterface *CnStakingContractInterfaceSession) RewardAddress() (common.Address, error) {
	return _CnStakingContractInterface.Contract.RewardAddress(&_CnStakingContractInterface.CallOpts)
}

// RewardAddress is a free data retrieval call binding the contract method 0x8cf57cb9.
//
// Solidity: function rewardAddress() constant returns(address)
func (_CnStakingContractInterface *CnStakingContractInterfaceCallerSession) RewardAddress() (common.Address, error) {
	return _CnStakingContractInterface.Contract.RewardAddress(&_CnStakingContractInterface.CallOpts)
}

// KirContractInterfaceABI is the input ABI used to generate the binding from.
const KirContractInterfaceABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getKirVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// KirContractInterfaceBinRuntime is the compiled bytecode used for adding genesis block without deploying code.
const KirContractInterfaceBinRuntime = `0x`

// KirContractInterfaceBin is the compiled bytecode used for deploying new contracts.
const KirContractInterfaceBin = `0x`

// DeployKirContractInterface deploys a new Klaytn contract, binding an instance of KirContractInterface to it.
func DeployKirContractInterface(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *KirContractInterface, error) {
	parsed, err := abi.JSON(strings.NewReader(KirContractInterfaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(KirContractInterfaceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &KirContractInterface{KirContractInterfaceCaller: KirContractInterfaceCaller{contract: contract}, KirContractInterfaceTransactor: KirContractInterfaceTransactor{contract: contract}, KirContractInterfaceFilterer: KirContractInterfaceFilterer{contract: contract}}, nil
}

// KirContractInterface is an auto generated Go binding around a Klaytn contract.
type KirContractInterface struct {
	KirContractInterfaceCaller     // Read-only binding to the contract
	KirContractInterfaceTransactor // Write-only binding to the contract
	KirContractInterfaceFilterer   // Log filterer for contract events
}

// KirContractInterfaceCaller is an auto generated read-only Go binding around a Klaytn contract.
type KirContractInterfaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// KirContractInterfaceTransactor is an auto generated write-only Go binding around a Klaytn contract.
type KirContractInterfaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// KirContractInterfaceFilterer is an auto generated log filtering Go binding around a Klaytn contract events.
type KirContractInterfaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// KirContractInterfaceSession is an auto generated Go binding around a Klaytn contract,
// with pre-set call and transact options.
type KirContractInterfaceSession struct {
	Contract     *KirContractInterface // Generic contract binding to set the session for
	CallOpts     bind.CallOpts         // Call options to use throughout this session
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// KirContractInterfaceCallerSession is an auto generated read-only Go binding around a Klaytn contract,
// with pre-set call options.
type KirContractInterfaceCallerSession struct {
	Contract *KirContractInterfaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts               // Call options to use throughout this session
}

// KirContractInterfaceTransactorSession is an auto generated write-only Go binding around a Klaytn contract,
// with pre-set transact options.
type KirContractInterfaceTransactorSession struct {
	Contract     *KirContractInterfaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// KirContractInterfaceRaw is an auto generated low-level Go binding around a Klaytn contract.
type KirContractInterfaceRaw struct {
	Contract *KirContractInterface // Generic contract binding to access the raw methods on
}

// KirContractInterfaceCallerRaw is an auto generated low-level read-only Go binding around a Klaytn contract.
type KirContractInterfaceCallerRaw struct {
	Contract *KirContractInterfaceCaller // Generic read-only contract binding to access the raw methods on
}

// KirContractInterfaceTransactorRaw is an auto generated low-level write-only Go binding around a Klaytn contract.
type KirContractInterfaceTransactorRaw struct {
	Contract *KirContractInterfaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewKirContractInterface creates a new instance of KirContractInterface, bound to a specific deployed contract.
func NewKirContractInterface(address common.Address, backend bind.ContractBackend) (*KirContractInterface, error) {
	contract, err := bindKirContractInterface(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &KirContractInterface{KirContractInterfaceCaller: KirContractInterfaceCaller{contract: contract}, KirContractInterfaceTransactor: KirContractInterfaceTransactor{contract: contract}, KirContractInterfaceFilterer: KirContractInterfaceFilterer{contract: contract}}, nil
}

// NewKirContractInterfaceCaller creates a new read-only instance of KirContractInterface, bound to a specific deployed contract.
func NewKirContractInterfaceCaller(address common.Address, caller bind.ContractCaller) (*KirContractInterfaceCaller, error) {
	contract, err := bindKirContractInterface(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &KirContractInterfaceCaller{contract: contract}, nil
}

// NewKirContractInterfaceTransactor creates a new write-only instance of KirContractInterface, bound to a specific deployed contract.
func NewKirContractInterfaceTransactor(address common.Address, transactor bind.ContractTransactor) (*KirContractInterfaceTransactor, error) {
	contract, err := bindKirContractInterface(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &KirContractInterfaceTransactor{contract: contract}, nil
}

// NewKirContractInterfaceFilterer creates a new log filterer instance of KirContractInterface, bound to a specific deployed contract.
func NewKirContractInterfaceFilterer(address common.Address, filterer bind.ContractFilterer) (*KirContractInterfaceFilterer, error) {
	contract, err := bindKirContractInterface(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &KirContractInterfaceFilterer{contract: contract}, nil
}

// bindKirContractInterface binds a generic wrapper to an already deployed contract.
func bindKirContractInterface(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(KirContractInterfaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_KirContractInterface *KirContractInterfaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _KirContractInterface.Contract.KirContractInterfaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_KirContractInterface *KirContractInterfaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _KirContractInterface.Contract.KirContractInterfaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_KirContractInterface *KirContractInterfaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _KirContractInterface.Contract.KirContractInterfaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_KirContractInterface *KirContractInterfaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _KirContractInterface.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_KirContractInterface *KirContractInterfaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _KirContractInterface.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_KirContractInterface *KirContractInterfaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _KirContractInterface.Contract.contract.Transact(opts, method, params...)
}

// GetKirVersion is a free data retrieval call binding the contract method 0x44426346.
//
// Solidity: function getKirVersion() constant returns(uint256)
func (_KirContractInterface *KirContractInterfaceCaller) GetKirVersion(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _KirContractInterface.contract.Call(opts, out, "getKirVersion")
	return *ret0, err
}

// GetKirVersion is a free data retrieval call binding the contract method 0x44426346.
//
// Solidity: function getKirVersion() constant returns(uint256)
func (_KirContractInterface *KirContractInterfaceSession) GetKirVersion() (*big.Int, error) {
	return _KirContractInterface.Contract.GetKirVersion(&_KirContractInterface.CallOpts)
}

// GetKirVersion is a free data retrieval call binding the contract method 0x44426346.
//
// Solidity: function getKirVersion() constant returns(uint256)
func (_KirContractInterface *KirContractInterfaceCallerSession) GetKirVersion() (*big.Int, error) {
	return _KirContractInterface.Contract.GetKirVersion(&_KirContractInterface.CallOpts)
}

// PocContractInterfaceABI is the input ABI used to generate the binding from.
const PocContractInterfaceABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getPocVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// PocContractInterfaceBinRuntime is the compiled bytecode used for adding genesis block without deploying code.
const PocContractInterfaceBinRuntime = `0x`

// PocContractInterfaceBin is the compiled bytecode used for deploying new contracts.
const PocContractInterfaceBin = `0x`

// DeployPocContractInterface deploys a new Klaytn contract, binding an instance of PocContractInterface to it.
func DeployPocContractInterface(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *PocContractInterface, error) {
	parsed, err := abi.JSON(strings.NewReader(PocContractInterfaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(PocContractInterfaceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &PocContractInterface{PocContractInterfaceCaller: PocContractInterfaceCaller{contract: contract}, PocContractInterfaceTransactor: PocContractInterfaceTransactor{contract: contract}, PocContractInterfaceFilterer: PocContractInterfaceFilterer{contract: contract}}, nil
}

// PocContractInterface is an auto generated Go binding around a Klaytn contract.
type PocContractInterface struct {
	PocContractInterfaceCaller     // Read-only binding to the contract
	PocContractInterfaceTransactor // Write-only binding to the contract
	PocContractInterfaceFilterer   // Log filterer for contract events
}

// PocContractInterfaceCaller is an auto generated read-only Go binding around a Klaytn contract.
type PocContractInterfaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PocContractInterfaceTransactor is an auto generated write-only Go binding around a Klaytn contract.
type PocContractInterfaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PocContractInterfaceFilterer is an auto generated log filtering Go binding around a Klaytn contract events.
type PocContractInterfaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PocContractInterfaceSession is an auto generated Go binding around a Klaytn contract,
// with pre-set call and transact options.
type PocContractInterfaceSession struct {
	Contract     *PocContractInterface // Generic contract binding to set the session for
	CallOpts     bind.CallOpts         // Call options to use throughout this session
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// PocContractInterfaceCallerSession is an auto generated read-only Go binding around a Klaytn contract,
// with pre-set call options.
type PocContractInterfaceCallerSession struct {
	Contract *PocContractInterfaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts               // Call options to use throughout this session
}

// PocContractInterfaceTransactorSession is an auto generated write-only Go binding around a Klaytn contract,
// with pre-set transact options.
type PocContractInterfaceTransactorSession struct {
	Contract     *PocContractInterfaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// PocContractInterfaceRaw is an auto generated low-level Go binding around a Klaytn contract.
type PocContractInterfaceRaw struct {
	Contract *PocContractInterface // Generic contract binding to access the raw methods on
}

// PocContractInterfaceCallerRaw is an auto generated low-level read-only Go binding around a Klaytn contract.
type PocContractInterfaceCallerRaw struct {
	Contract *PocContractInterfaceCaller // Generic read-only contract binding to access the raw methods on
}

// PocContractInterfaceTransactorRaw is an auto generated low-level write-only Go binding around a Klaytn contract.
type PocContractInterfaceTransactorRaw struct {
	Contract *PocContractInterfaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewPocContractInterface creates a new instance of PocContractInterface, bound to a specific deployed contract.
func NewPocContractInterface(address common.Address, backend bind.ContractBackend) (*PocContractInterface, error) {
	contract, err := bindPocContractInterface(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &PocContractInterface{PocContractInterfaceCaller: PocContractInterfaceCaller{contract: contract}, PocContractInterfaceTransactor: PocContractInterfaceTransactor{contract: contract}, PocContractInterfaceFilterer: PocContractInterfaceFilterer{contract: contract}}, nil
}

// NewPocContractInterfaceCaller creates a new read-only instance of PocContractInterface, bound to a specific deployed contract.
func NewPocContractInterfaceCaller(address common.Address, caller bind.ContractCaller) (*PocContractInterfaceCaller, error) {
	contract, err := bindPocContractInterface(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &PocContractInterfaceCaller{contract: contract}, nil
}

// NewPocContractInterfaceTransactor creates a new write-only instance of PocContractInterface, bound to a specific deployed contract.
func NewPocContractInterfaceTransactor(address common.Address, transactor bind.ContractTransactor) (*PocContractInterfaceTransactor, error) {
	contract, err := bindPocContractInterface(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &PocContractInterfaceTransactor{contract: contract}, nil
}

// NewPocContractInterfaceFilterer creates a new log filterer instance of PocContractInterface, bound to a specific deployed contract.
func NewPocContractInterfaceFilterer(address common.Address, filterer bind.ContractFilterer) (*PocContractInterfaceFilterer, error) {
	contract, err := bindPocContractInterface(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &PocContractInterfaceFilterer{contract: contract}, nil
}

// bindPocContractInterface binds a generic wrapper to an already deployed contract.
func bindPocContractInterface(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(PocContractInterfaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PocContractInterface *PocContractInterfaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _PocContractInterface.Contract.PocContractInterfaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PocContractInterface *PocContractInterfaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PocContractInterface.Contract.PocContractInterfaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PocContractInterface *PocContractInterfaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PocContractInterface.Contract.PocContractInterfaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PocContractInterface *PocContractInterfaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _PocContractInterface.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PocContractInterface *PocContractInterfaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PocContractInterface.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PocContractInterface *PocContractInterfaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PocContractInterface.Contract.contract.Transact(opts, method, params...)
}

// GetPocVersion is a free data retrieval call binding the contract method 0x0f610072.
//
// Solidity: function getPocVersion() constant returns(uint256)
func (_PocContractInterface *PocContractInterfaceCaller) GetPocVersion(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _PocContractInterface.contract.Call(opts, out, "getPocVersion")
	return *ret0, err
}

// GetPocVersion is a free data retrieval call binding the contract method 0x0f610072.
//
// Solidity: function getPocVersion() constant returns(uint256)
func (_PocContractInterface *PocContractInterfaceSession) GetPocVersion() (*big.Int, error) {
	return _PocContractInterface.Contract.GetPocVersion(&_PocContractInterface.CallOpts)
}

// GetPocVersion is a free data retrieval call binding the contract method 0x0f610072.
//
// Solidity: function getPocVersion() constant returns(uint256)
func (_PocContractInterface *PocContractInterfaceCallerSession) GetPocVersion() (*big.Int, error) {
	return _PocContractInterface.Contract.GetPocVersion(&_PocContractInterface.CallOpts)
}

// SafeMathABI is the input ABI used to generate the binding from.
const SafeMathABI = "[]"

// SafeMathBinRuntime is the compiled bytecode used for adding genesis block without deploying code.
const SafeMathBinRuntime = `0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820d4bd2ee00885cbf06a98638f236ee4409e2c408e94203daa5f870327c73b61890029`

// SafeMathBin is the compiled bytecode used for deploying new contracts.
const SafeMathBin = `0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820d4bd2ee00885cbf06a98638f236ee4409e2c408e94203daa5f870327c73b61890029`

// DeploySafeMath deploys a new Klaytn contract, binding an instance of SafeMath to it.
func DeploySafeMath(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SafeMath, error) {
	parsed, err := abi.JSON(strings.NewReader(SafeMathABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SafeMathBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SafeMath{SafeMathCaller: SafeMathCaller{contract: contract}, SafeMathTransactor: SafeMathTransactor{contract: contract}, SafeMathFilterer: SafeMathFilterer{contract: contract}}, nil
}

// SafeMath is an auto generated Go binding around a Klaytn contract.
type SafeMath struct {
	SafeMathCaller     // Read-only binding to the contract
	SafeMathTransactor // Write-only binding to the contract
	SafeMathFilterer   // Log filterer for contract events
}

// SafeMathCaller is an auto generated read-only Go binding around a Klaytn contract.
type SafeMathCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathTransactor is an auto generated write-only Go binding around a Klaytn contract.
type SafeMathTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathFilterer is an auto generated log filtering Go binding around a Klaytn contract events.
type SafeMathFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathSession is an auto generated Go binding around a Klaytn contract,
// with pre-set call and transact options.
type SafeMathSession struct {
	Contract     *SafeMath         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SafeMathCallerSession is an auto generated read-only Go binding around a Klaytn contract,
// with pre-set call options.
type SafeMathCallerSession struct {
	Contract *SafeMathCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// SafeMathTransactorSession is an auto generated write-only Go binding around a Klaytn contract,
// with pre-set transact options.
type SafeMathTransactorSession struct {
	Contract     *SafeMathTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// SafeMathRaw is an auto generated low-level Go binding around a Klaytn contract.
type SafeMathRaw struct {
	Contract *SafeMath // Generic contract binding to access the raw methods on
}

// SafeMathCallerRaw is an auto generated low-level read-only Go binding around a Klaytn contract.
type SafeMathCallerRaw struct {
	Contract *SafeMathCaller // Generic read-only contract binding to access the raw methods on
}

// SafeMathTransactorRaw is an auto generated low-level write-only Go binding around a Klaytn contract.
type SafeMathTransactorRaw struct {
	Contract *SafeMathTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSafeMath creates a new instance of SafeMath, bound to a specific deployed contract.
func NewSafeMath(address common.Address, backend bind.ContractBackend) (*SafeMath, error) {
	contract, err := bindSafeMath(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SafeMath{SafeMathCaller: SafeMathCaller{contract: contract}, SafeMathTransactor: SafeMathTransactor{contract: contract}, SafeMathFilterer: SafeMathFilterer{contract: contract}}, nil
}

// NewSafeMathCaller creates a new read-only instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathCaller(address common.Address, caller bind.ContractCaller) (*SafeMathCaller, error) {
	contract, err := bindSafeMath(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SafeMathCaller{contract: contract}, nil
}

// NewSafeMathTransactor creates a new write-only instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathTransactor(address common.Address, transactor bind.ContractTransactor) (*SafeMathTransactor, error) {
	contract, err := bindSafeMath(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SafeMathTransactor{contract: contract}, nil
}

// NewSafeMathFilterer creates a new log filterer instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathFilterer(address common.Address, filterer bind.ContractFilterer) (*SafeMathFilterer, error) {
	contract, err := bindSafeMath(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SafeMathFilterer{contract: contract}, nil
}

// bindSafeMath binds a generic wrapper to an already deployed contract.
func bindSafeMath(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SafeMathABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SafeMath *SafeMathRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SafeMath.Contract.SafeMathCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SafeMath *SafeMathRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SafeMath.Contract.SafeMathTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SafeMath *SafeMathRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SafeMath.Contract.SafeMathTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SafeMath *SafeMathCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SafeMath.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SafeMath *SafeMathTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SafeMath.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SafeMath *SafeMathTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SafeMath.Contract.contract.Transact(opts, method, params...)
}
